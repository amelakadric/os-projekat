GAS LISTING /tmp/ccRxWuF1.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   8              	_Z41__static_initialization_and_destruction_0ii:
   9              	.LFB8:
  10              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   2:src/MemoryAllocator.cpp **** 
   3:src/MemoryAllocator.cpp **** 
   4:src/MemoryAllocator.cpp **** char* MemoryAllocator::freeMemHead = (char *)HEAP_START_ADDR;
   5:src/MemoryAllocator.cpp **** 
   6:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::top= nullptr;
   7:src/MemoryAllocator.cpp **** 
   8:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::heapStart = nullptr;
   9:src/MemoryAllocator.cpp **** 
  10:src/MemoryAllocator.cpp **** MemoryAllocator* MemoryAllocator::instance= nullptr;
  11:src/MemoryAllocator.cpp **** 
  12:src/MemoryAllocator.cpp **** MemoryAllocator *MemoryAllocator::getInstance() {
  13:src/MemoryAllocator.cpp ****     if (MemoryAllocator::instance == nullptr){
  14:src/MemoryAllocator.cpp ****         instance = (MemoryAllocator*)HEAP_START_ADDR;
  15:src/MemoryAllocator.cpp ****         freeMemHead=freeMemHead+sizeof(MemoryAllocator);
  16:src/MemoryAllocator.cpp ****     }
  17:src/MemoryAllocator.cpp ****     return MemoryAllocator::instance;
  18:src/MemoryAllocator.cpp **** }
  19:src/MemoryAllocator.cpp **** 
  20:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::allocInHeap(size_t size) {
  21:src/MemoryAllocator.cpp ****     size= allocSize(size);
  22:src/MemoryAllocator.cpp ****     if((freeMemHead+size)>((char*)HEAP_END_ADDR-1)){
  23:src/MemoryAllocator.cpp ****         return nullptr;
  24:src/MemoryAllocator.cpp ****     }
  25:src/MemoryAllocator.cpp ****     BlockHeader* blockStart=(BlockHeader*)freeMemHead;
  26:src/MemoryAllocator.cpp **** 
  27:src/MemoryAllocator.cpp ****         freeMemHead+=size;
  28:src/MemoryAllocator.cpp **** 
  29:src/MemoryAllocator.cpp ****     return blockStart;
  30:src/MemoryAllocator.cpp **** 
  31:src/MemoryAllocator.cpp **** }
  32:src/MemoryAllocator.cpp **** 
  33:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::firstfit(size_t size){
  34:src/MemoryAllocator.cpp ****     BlockHeader* block =(BlockHeader*)freeMemHead;
  35:src/MemoryAllocator.cpp **** 
  36:src/MemoryAllocator.cpp ****     while(block!= nullptr){
  37:src/MemoryAllocator.cpp ****         if(!block->free || block->size < size){
  38:src/MemoryAllocator.cpp ****             block=block->next;
  39:src/MemoryAllocator.cpp ****             continue;
  40:src/MemoryAllocator.cpp ****         }
  41:src/MemoryAllocator.cpp ****         return block;
  42:src/MemoryAllocator.cpp ****     }
  43:src/MemoryAllocator.cpp ****     return nullptr;
  44:src/MemoryAllocator.cpp **** }
  45:src/MemoryAllocator.cpp **** 
  46:src/MemoryAllocator.cpp **** 
  47:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::findBlock(BlockHeader* p){
  48:src/MemoryAllocator.cpp ****     BlockHeader *block;
GAS LISTING /tmp/ccRxWuF1.s 			page 2


  49:src/MemoryAllocator.cpp **** 
  50:src/MemoryAllocator.cpp ****     for(block=heapStart; block!= nullptr; block=block->next){
  51:src/MemoryAllocator.cpp ****         if(block==p){
  52:src/MemoryAllocator.cpp ****             return block;
  53:src/MemoryAllocator.cpp ****         }
  54:src/MemoryAllocator.cpp ****     }
  55:src/MemoryAllocator.cpp ****     return nullptr;
  56:src/MemoryAllocator.cpp **** }
  57:src/MemoryAllocator.cpp **** 
  58:src/MemoryAllocator.cpp **** 
  59:src/MemoryAllocator.cpp **** void* MemoryAllocator::malloc(size_t size){
  60:src/MemoryAllocator.cpp ****     size= align(size);
  61:src/MemoryAllocator.cpp **** 
  62:src/MemoryAllocator.cpp ****     if (BlockHeader* block = firstfit(size)){
  63:src/MemoryAllocator.cpp ****         return block;
  64:src/MemoryAllocator.cpp ****     }
  65:src/MemoryAllocator.cpp **** 
  66:src/MemoryAllocator.cpp ****     BlockHeader* block = allocInHeap(size);
  67:src/MemoryAllocator.cpp ****     block->size=size;
  68:src/MemoryAllocator.cpp ****     block->free= false;
  69:src/MemoryAllocator.cpp **** 
  70:src/MemoryAllocator.cpp ****     if(heapStart== nullptr){
  71:src/MemoryAllocator.cpp ****         heapStart = block;
  72:src/MemoryAllocator.cpp ****     }
  73:src/MemoryAllocator.cpp ****     if(top != nullptr){
  74:src/MemoryAllocator.cpp ****         top->next=block;
  75:src/MemoryAllocator.cpp ****     }
  76:src/MemoryAllocator.cpp ****     top=block;
  77:src/MemoryAllocator.cpp ****     return block;
  78:src/MemoryAllocator.cpp **** }
  79:src/MemoryAllocator.cpp **** 
  80:src/MemoryAllocator.cpp **** int MemoryAllocator::free(void* p){
  81:src/MemoryAllocator.cpp ****     BlockHeader* block = findBlock((BlockHeader*)p);
  82:src/MemoryAllocator.cpp ****     if (block!= nullptr){
  83:src/MemoryAllocator.cpp ****         block->free= true;
  84:src/MemoryAllocator.cpp ****         return 0;
  85:src/MemoryAllocator.cpp ****     }
  86:src/MemoryAllocator.cpp ****     return 1;
  87:src/MemoryAllocator.cpp **** }
  11              		.loc 1 87 1
  12              		.cfi_startproc
  13              	.LVL0:
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  20              		.loc 1 87 1 is_stmt 0
  21 000c 93071000 		li	a5,1
  22 0010 6308F500 		beq	a0,a5,.L4
  23              	.L1:
  24 0014 03348100 		ld	s0,8(sp)
  25              		.cfi_remember_state
  26              		.cfi_restore 8
  27              		.cfi_def_cfa 2, 16
  28 0018 13010101 		addi	sp,sp,16
GAS LISTING /tmp/ccRxWuF1.s 			page 3


  29              		.cfi_def_cfa_offset 0
  30 001c 67800000 		jr	ra
  31              	.L4:
  32              		.cfi_restore_state
  33              		.loc 1 87 1 discriminator 1
  34 0020 B7070100 		li	a5,65536
  35 0024 9387F7FF 		addi	a5,a5,-1
  36 0028 E396F5FE 		bne	a1,a5,.L1
   4:src/MemoryAllocator.cpp **** 
  37              		.loc 1 4 7
  38 002c 97070000 		la	a5,HEAP_START_ADDR
  38      83B70700 
  39 0034 83B70700 		ld	a5,0(a5)
  40 0038 17070000 		sd	a5,.LANCHOR0,a4
  40      2330F700 
  41              		.loc 1 87 1
  42 0040 6FF05FFD 		j	.L1
  43              		.cfi_endproc
  44              	.LFE8:
  46              		.align	2
  47              		.globl	_ZN15MemoryAllocator11getInstanceEv
  49              	_ZN15MemoryAllocator11getInstanceEv:
  50              	.LFB2:
  12:src/MemoryAllocator.cpp ****     if (MemoryAllocator::instance == nullptr){
  51              		.loc 1 12 49 is_stmt 1
  52              		.cfi_startproc
  53 0044 130101FF 		addi	sp,sp,-16
  54              		.cfi_def_cfa_offset 16
  55 0048 23348100 		sd	s0,8(sp)
  56              		.cfi_offset 8, -8
  57 004c 13040101 		addi	s0,sp,16
  58              		.cfi_def_cfa 8, 0
  13:src/MemoryAllocator.cpp ****         instance = (MemoryAllocator*)HEAP_START_ADDR;
  59              		.loc 1 13 5
  13:src/MemoryAllocator.cpp ****         instance = (MemoryAllocator*)HEAP_START_ADDR;
  60              		.loc 1 13 35 is_stmt 0
  61 0050 97070000 		ld	a5,.LANCHOR0+8
  61      83B70700 
  13:src/MemoryAllocator.cpp ****         instance = (MemoryAllocator*)HEAP_START_ADDR;
  62              		.loc 1 13 5
  63 0058 638C0700 		beqz	a5,.L8
  64              	.L6:
  17:src/MemoryAllocator.cpp **** }
  65              		.loc 1 17 5 is_stmt 1
  18:src/MemoryAllocator.cpp **** 
  66              		.loc 1 18 1 is_stmt 0
  67 005c 17050000 		ld	a0,.LANCHOR0+8
  67      03350500 
  68 0064 03348100 		ld	s0,8(sp)
  69              		.cfi_remember_state
  70              		.cfi_restore 8
  71              		.cfi_def_cfa 2, 16
  72 0068 13010101 		addi	sp,sp,16
  73              		.cfi_def_cfa_offset 0
  74 006c 67800000 		jr	ra
  75              	.L8:
  76              		.cfi_restore_state
GAS LISTING /tmp/ccRxWuF1.s 			page 4


  14:src/MemoryAllocator.cpp ****         freeMemHead=freeMemHead+sizeof(MemoryAllocator);
  77              		.loc 1 14 9 is_stmt 1
  14:src/MemoryAllocator.cpp ****         freeMemHead=freeMemHead+sizeof(MemoryAllocator);
  78              		.loc 1 14 18 is_stmt 0
  79 0070 97070000 		lla	a5,.LANCHOR0
  79      93870700 
  80 0078 17070000 		la	a4,HEAP_START_ADDR
  80      03370700 
  81 0080 03370700 		ld	a4,0(a4)
  82 0084 23B4E700 		sd	a4,8(a5)
  15:src/MemoryAllocator.cpp ****     }
  83              		.loc 1 15 9 is_stmt 1
  15:src/MemoryAllocator.cpp ****     }
  84              		.loc 1 15 32 is_stmt 0
  85 0088 03B70700 		ld	a4,0(a5)
  86 008c 13071700 		addi	a4,a4,1
  15:src/MemoryAllocator.cpp ****     }
  87              		.loc 1 15 20
  88 0090 23B0E700 		sd	a4,0(a5)
  89 0094 6FF09FFC 		j	.L6
  90              		.cfi_endproc
  91              	.LFE2:
  93              		.align	2
  94              		.globl	_ZN15MemoryAllocator11allocInHeapEm
  96              	_ZN15MemoryAllocator11allocInHeapEm:
  97              	.LFB3:
  20:src/MemoryAllocator.cpp ****     size= allocSize(size);
  98              		.loc 1 20 73 is_stmt 1
  99              		.cfi_startproc
 100              	.LVL1:
 101 0098 130101FF 		addi	sp,sp,-16
 102              		.cfi_def_cfa_offset 16
 103 009c 23348100 		sd	s0,8(sp)
 104              		.cfi_offset 8, -8
 105 00a0 13040101 		addi	s0,sp,16
 106              		.cfi_def_cfa 8, 0
  21:src/MemoryAllocator.cpp ****     if((freeMemHead+size)>((char*)HEAP_END_ADDR-1)){
 107              		.loc 1 21 5
 108              	.LVL2:
 109              	.LBB7:
 110              	.LBB8:
 111              		.file 2 "src/../h/MemoryAllocator.hpp"
   1:src/../h/MemoryAllocator.hpp **** 
   2:src/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_MEMORYALLOCATOR_HPP
   3:src/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_MEMORYALLOCATOR_HPP
   4:src/../h/MemoryAllocator.hpp **** 
   5:src/../h/MemoryAllocator.hpp **** #include "../lib/hw.h"
   6:src/../h/MemoryAllocator.hpp **** 
   7:src/../h/MemoryAllocator.hpp **** 
   8:src/../h/MemoryAllocator.hpp **** class MemoryAllocator {
   9:src/../h/MemoryAllocator.hpp **** private:
  10:src/../h/MemoryAllocator.hpp **** 
  11:src/../h/MemoryAllocator.hpp ****     static MemoryAllocator *instance;
  12:src/../h/MemoryAllocator.hpp **** 
  13:src/../h/MemoryAllocator.hpp ****     struct BlockHeader {
  14:src/../h/MemoryAllocator.hpp ****         BlockHeader *next= nullptr;
  15:src/../h/MemoryAllocator.hpp ****         size_t size;
GAS LISTING /tmp/ccRxWuF1.s 			page 5


  16:src/../h/MemoryAllocator.hpp ****         bool free;
  17:src/../h/MemoryAllocator.hpp ****     };
  18:src/../h/MemoryAllocator.hpp ****     static char *freeMemHead;
  19:src/../h/MemoryAllocator.hpp ****     static BlockHeader *top;
  20:src/../h/MemoryAllocator.hpp ****     static BlockHeader *heapStart;
  21:src/../h/MemoryAllocator.hpp **** 
  22:src/../h/MemoryAllocator.hpp ****     inline size_t align(size_t n) {
  23:src/../h/MemoryAllocator.hpp ****         return (n + MEM_BLOCK_SIZE - 1) & ~(MEM_BLOCK_SIZE - 1);
  24:src/../h/MemoryAllocator.hpp ****     }
  25:src/../h/MemoryAllocator.hpp **** 
  26:src/../h/MemoryAllocator.hpp ****     inline size_t allocSize(size_t size) {
  27:src/../h/MemoryAllocator.hpp ****         return size + sizeof(BlockHeader);
 112              		.loc 2 27 9
 113              		.loc 2 27 41 is_stmt 0
 114 00a4 93858501 		addi	a1,a1,24
 115              	.LVL3:
 116              	.LBE8:
 117              	.LBE7:
  22:src/MemoryAllocator.cpp ****         return nullptr;
 118              		.loc 1 22 5 is_stmt 1
  22:src/MemoryAllocator.cpp ****         return nullptr;
 119              		.loc 1 22 20 is_stmt 0
 120 00a8 17050000 		ld	a0,.LANCHOR0
 120      03350500 
 121              	.LVL4:
 122 00b0 B305B500 		add	a1,a0,a1
 123              	.LVL5:
  22:src/MemoryAllocator.cpp ****         return nullptr;
 124              		.loc 1 22 28
 125 00b4 97070000 		la	a5,HEAP_END_ADDR
 125      83B70700 
 126 00bc 83B70700 		ld	a5,0(a5)
  22:src/MemoryAllocator.cpp ****         return nullptr;
 127              		.loc 1 22 48
 128 00c0 9387F7FF 		addi	a5,a5,-1
  22:src/MemoryAllocator.cpp ****         return nullptr;
 129              		.loc 1 22 5
 130 00c4 63ECB700 		bgtu	a1,a5,.L11
  25:src/MemoryAllocator.cpp **** 
 131              		.loc 1 25 5 is_stmt 1
 132              	.LVL6:
  27:src/MemoryAllocator.cpp **** 
 133              		.loc 1 27 9
  27:src/MemoryAllocator.cpp **** 
 134              		.loc 1 27 20 is_stmt 0
 135 00c8 97070000 		sd	a1,.LANCHOR0,a5
 135      23B0B700 
  29:src/MemoryAllocator.cpp **** 
 136              		.loc 1 29 5 is_stmt 1
 137              	.LVL7:
 138              	.L9:
  31:src/MemoryAllocator.cpp **** 
 139              		.loc 1 31 1 is_stmt 0
 140 00d0 03348100 		ld	s0,8(sp)
 141              		.cfi_remember_state
 142              		.cfi_restore 8
 143              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/ccRxWuF1.s 			page 6


 144 00d4 13010101 		addi	sp,sp,16
 145              		.cfi_def_cfa_offset 0
 146 00d8 67800000 		jr	ra
 147              	.L11:
 148              		.cfi_restore_state
  23:src/MemoryAllocator.cpp ****     }
 149              		.loc 1 23 16
 150 00dc 13050000 		li	a0,0
 151 00e0 6FF01FFF 		j	.L9
 152              		.cfi_endproc
 153              	.LFE3:
 155              		.align	2
 156              		.globl	_ZN15MemoryAllocator8firstfitEm
 158              	_ZN15MemoryAllocator8firstfitEm:
 159              	.LFB4:
  33:src/MemoryAllocator.cpp ****     BlockHeader* block =(BlockHeader*)freeMemHead;
 160              		.loc 1 33 69 is_stmt 1
 161              		.cfi_startproc
 162              	.LVL8:
 163 00e4 130101FF 		addi	sp,sp,-16
 164              		.cfi_def_cfa_offset 16
 165 00e8 23348100 		sd	s0,8(sp)
 166              		.cfi_offset 8, -8
 167 00ec 13040101 		addi	s0,sp,16
 168              		.cfi_def_cfa 8, 0
  34:src/MemoryAllocator.cpp **** 
 169              		.loc 1 34 5
  34:src/MemoryAllocator.cpp **** 
 170              		.loc 1 34 18 is_stmt 0
 171 00f0 17050000 		ld	a0,.LANCHOR0
 171      03350500 
 172              	.LVL9:
 173 00f8 6F008000 		j	.L16
 174              	.L15:
  38:src/MemoryAllocator.cpp ****             continue;
 175              		.loc 1 38 13 is_stmt 1 discriminator 3
  38:src/MemoryAllocator.cpp ****             continue;
 176              		.loc 1 38 18 is_stmt 0 discriminator 3
 177 00fc 03350500 		ld	a0,0(a0)
 178              	.LVL10:
  39:src/MemoryAllocator.cpp ****         }
 179              		.loc 1 39 13 is_stmt 1 discriminator 3
 180              	.L16:
  36:src/MemoryAllocator.cpp ****         if(!block->free || block->size < size){
 181              		.loc 1 36 5
  36:src/MemoryAllocator.cpp ****         if(!block->free || block->size < size){
 182              		.loc 1 36 16
 183 0100 630A0500 		beqz	a0,.L13
  37:src/MemoryAllocator.cpp ****             block=block->next;
 184              		.loc 1 37 9
  37:src/MemoryAllocator.cpp ****             block=block->next;
 185              		.loc 1 37 20 is_stmt 0
 186 0104 83470501 		lbu	a5,16(a0)
  37:src/MemoryAllocator.cpp ****             block=block->next;
 187              		.loc 1 37 9
 188 0108 E38A07FE 		beqz	a5,.L15
  37:src/MemoryAllocator.cpp ****             block=block->next;
GAS LISTING /tmp/ccRxWuF1.s 			page 7


 189              		.loc 1 37 35 discriminator 2
 190 010c 83378500 		ld	a5,8(a0)
  37:src/MemoryAllocator.cpp ****             block=block->next;
 191              		.loc 1 37 25 discriminator 2
 192 0110 E3E6B7FE 		bltu	a5,a1,.L15
 193              	.L13:
  44:src/MemoryAllocator.cpp **** 
 194              		.loc 1 44 1
 195 0114 03348100 		ld	s0,8(sp)
 196              		.cfi_restore 8
 197              		.cfi_def_cfa 2, 16
 198 0118 13010101 		addi	sp,sp,16
 199              		.cfi_def_cfa_offset 0
 200 011c 67800000 		jr	ra
 201              		.cfi_endproc
 202              	.LFE4:
 204              		.align	2
 205              		.globl	_ZN15MemoryAllocator9findBlockEPNS_11BlockHeaderE
 207              	_ZN15MemoryAllocator9findBlockEPNS_11BlockHeaderE:
 208              	.LFB5:
  47:src/MemoryAllocator.cpp ****     BlockHeader *block;
 209              		.loc 1 47 73 is_stmt 1
 210              		.cfi_startproc
 211              	.LVL11:
 212 0120 130101FF 		addi	sp,sp,-16
 213              		.cfi_def_cfa_offset 16
 214 0124 23348100 		sd	s0,8(sp)
 215              		.cfi_offset 8, -8
 216 0128 13040101 		addi	s0,sp,16
 217              		.cfi_def_cfa 8, 0
  48:src/MemoryAllocator.cpp **** 
 218              		.loc 1 48 5
  50:src/MemoryAllocator.cpp ****         if(block==p){
 219              		.loc 1 50 5
  50:src/MemoryAllocator.cpp ****         if(block==p){
 220              		.loc 1 50 14 is_stmt 0
 221 012c 17050000 		ld	a0,.LANCHOR0+16
 221      03350500 
 222              	.LVL12:
 223              	.L20:
  50:src/MemoryAllocator.cpp ****         if(block==p){
 224              		.loc 1 50 31 is_stmt 1 discriminator 1
 225 0134 63080500 		beqz	a0,.L18
  51:src/MemoryAllocator.cpp ****             return block;
 226              		.loc 1 51 9
 227 0138 6306B500 		beq	a0,a1,.L18
  50:src/MemoryAllocator.cpp ****         if(block==p){
 228              		.loc 1 50 5 discriminator 2
  50:src/MemoryAllocator.cpp ****         if(block==p){
 229              		.loc 1 50 48 is_stmt 0 discriminator 2
 230 013c 03350500 		ld	a0,0(a0)
 231              	.LVL13:
  50:src/MemoryAllocator.cpp ****         if(block==p){
 232              		.loc 1 50 5 discriminator 2
 233 0140 6FF05FFF 		j	.L20
 234              	.L18:
  56:src/MemoryAllocator.cpp **** 
GAS LISTING /tmp/ccRxWuF1.s 			page 8


 235              		.loc 1 56 1
 236 0144 03348100 		ld	s0,8(sp)
 237              		.cfi_restore 8
 238              		.cfi_def_cfa 2, 16
 239 0148 13010101 		addi	sp,sp,16
 240              		.cfi_def_cfa_offset 0
 241 014c 67800000 		jr	ra
 242              		.cfi_endproc
 243              	.LFE5:
 245              		.align	2
 246              		.globl	_ZN15MemoryAllocator6mallocEm
 248              	_ZN15MemoryAllocator6mallocEm:
 249              	.LFB6:
  59:src/MemoryAllocator.cpp ****     size= align(size);
 250              		.loc 1 59 43 is_stmt 1
 251              		.cfi_startproc
 252              	.LVL14:
 253 0150 130101FE 		addi	sp,sp,-32
 254              		.cfi_def_cfa_offset 32
 255 0154 233C1100 		sd	ra,24(sp)
 256 0158 23388100 		sd	s0,16(sp)
 257 015c 23349100 		sd	s1,8(sp)
 258 0160 23302101 		sd	s2,0(sp)
 259              		.cfi_offset 1, -8
 260              		.cfi_offset 8, -16
 261              		.cfi_offset 9, -24
 262              		.cfi_offset 18, -32
 263 0164 13040102 		addi	s0,sp,32
 264              		.cfi_def_cfa 8, 0
 265 0168 13090500 		mv	s2,a0
  60:src/MemoryAllocator.cpp **** 
 266              		.loc 1 60 5
 267              	.LVL15:
 268              	.LBB9:
 269              	.LBB10:
  23:src/../h/MemoryAllocator.hpp ****     }
 270              		.loc 2 23 9
  23:src/../h/MemoryAllocator.hpp ****     }
 271              		.loc 2 23 36 is_stmt 0
 272 016c 9384F503 		addi	s1,a1,63
  23:src/../h/MemoryAllocator.hpp ****     }
 273              		.loc 2 23 63
 274 0170 93F404FC 		andi	s1,s1,-64
 275              	.LVL16:
 276              	.LBE10:
 277              	.LBE9:
  62:src/MemoryAllocator.cpp ****         return block;
 278              		.loc 1 62 5 is_stmt 1
 279              	.LBB11:
  62:src/MemoryAllocator.cpp ****         return block;
 280              		.loc 1 62 38 is_stmt 0
 281 0174 93850400 		mv	a1,s1
 282 0178 97000000 		call	_ZN15MemoryAllocator8firstfitEm
 282      E7800000 
 283              	.LVL17:
  62:src/MemoryAllocator.cpp ****         return block;
 284              		.loc 1 62 5
GAS LISTING /tmp/ccRxWuF1.s 			page 9


 285 0180 630E0500 		beqz	a0,.L27
 286              	.LVL18:
 287              	.L22:
 288              	.LBE11:
  78:src/MemoryAllocator.cpp **** 
 289              		.loc 1 78 1
 290 0184 83308101 		ld	ra,24(sp)
 291              		.cfi_remember_state
 292              		.cfi_restore 1
 293 0188 03340101 		ld	s0,16(sp)
 294              		.cfi_restore 8
 295              		.cfi_def_cfa 2, 32
 296 018c 83348100 		ld	s1,8(sp)
 297              		.cfi_restore 9
 298              	.LVL19:
 299 0190 03390100 		ld	s2,0(sp)
 300              		.cfi_restore 18
 301              	.LVL20:
 302 0194 13010102 		addi	sp,sp,32
 303              		.cfi_def_cfa_offset 0
 304 0198 67800000 		jr	ra
 305              	.LVL21:
 306              	.L27:
 307              		.cfi_restore_state
  66:src/MemoryAllocator.cpp ****     block->size=size;
 308              		.loc 1 66 5 is_stmt 1
  66:src/MemoryAllocator.cpp ****     block->size=size;
 309              		.loc 1 66 37 is_stmt 0
 310 019c 93850400 		mv	a1,s1
 311 01a0 13050900 		mv	a0,s2
 312              	.LVL22:
 313 01a4 97000000 		call	_ZN15MemoryAllocator11allocInHeapEm
 313      E7800000 
 314              	.LVL23:
  67:src/MemoryAllocator.cpp ****     block->free= false;
 315              		.loc 1 67 5 is_stmt 1
  67:src/MemoryAllocator.cpp ****     block->free= false;
 316              		.loc 1 67 16 is_stmt 0
 317 01ac 23349500 		sd	s1,8(a0)
  68:src/MemoryAllocator.cpp **** 
 318              		.loc 1 68 5 is_stmt 1
  68:src/MemoryAllocator.cpp **** 
 319              		.loc 1 68 16 is_stmt 0
 320 01b0 23080500 		sb	zero,16(a0)
  70:src/MemoryAllocator.cpp ****         heapStart = block;
 321              		.loc 1 70 5 is_stmt 1
  70:src/MemoryAllocator.cpp ****         heapStart = block;
 322              		.loc 1 70 17 is_stmt 0
 323 01b4 97070000 		ld	a5,.LANCHOR0+16
 323      83B70700 
  70:src/MemoryAllocator.cpp ****         heapStart = block;
 324              		.loc 1 70 5
 325 01bc 63800702 		beqz	a5,.L28
 326              	.L24:
  73:src/MemoryAllocator.cpp ****         top->next=block;
 327              		.loc 1 73 5 is_stmt 1
  73:src/MemoryAllocator.cpp ****         top->next=block;
GAS LISTING /tmp/ccRxWuF1.s 			page 10


 328              		.loc 1 73 12 is_stmt 0
 329 01c0 97070000 		ld	a5,.LANCHOR0+24
 329      83B70700 
  73:src/MemoryAllocator.cpp ****         top->next=block;
 330              		.loc 1 73 5
 331 01c8 63840700 		beqz	a5,.L25
  74:src/MemoryAllocator.cpp ****     }
 332              		.loc 1 74 9 is_stmt 1
  74:src/MemoryAllocator.cpp ****     }
 333              		.loc 1 74 18 is_stmt 0
 334 01cc 23B0A700 		sd	a0,0(a5)
 335              	.L25:
  76:src/MemoryAllocator.cpp ****     return block;
 336              		.loc 1 76 5 is_stmt 1
  76:src/MemoryAllocator.cpp ****     return block;
 337              		.loc 1 76 8 is_stmt 0
 338 01d0 97070000 		sd	a0,.LANCHOR0+24,a5
 338      23B0A700 
  77:src/MemoryAllocator.cpp **** }
 339              		.loc 1 77 5 is_stmt 1
  77:src/MemoryAllocator.cpp **** }
 340              		.loc 1 77 12 is_stmt 0
 341 01d8 6FF0DFFA 		j	.L22
 342              	.L28:
  71:src/MemoryAllocator.cpp ****     }
 343              		.loc 1 71 9 is_stmt 1
  71:src/MemoryAllocator.cpp ****     }
 344              		.loc 1 71 19 is_stmt 0
 345 01dc 97070000 		sd	a0,.LANCHOR0+16,a5
 345      23B0A700 
 346 01e4 6FF0DFFD 		j	.L24
 347              		.cfi_endproc
 348              	.LFE6:
 350              		.align	2
 351              		.globl	_ZN15MemoryAllocator4freeEPv
 353              	_ZN15MemoryAllocator4freeEPv:
 354              	.LFB7:
  80:src/MemoryAllocator.cpp ****     BlockHeader* block = findBlock((BlockHeader*)p);
 355              		.loc 1 80 35 is_stmt 1
 356              		.cfi_startproc
 357              	.LVL24:
 358 01e8 130101FF 		addi	sp,sp,-16
 359              		.cfi_def_cfa_offset 16
 360 01ec 23341100 		sd	ra,8(sp)
 361 01f0 23308100 		sd	s0,0(sp)
 362              		.cfi_offset 1, -8
 363              		.cfi_offset 8, -16
 364 01f4 13040101 		addi	s0,sp,16
 365              		.cfi_def_cfa 8, 0
  81:src/MemoryAllocator.cpp ****     if (block!= nullptr){
 366              		.loc 1 81 5
  81:src/MemoryAllocator.cpp ****     if (block!= nullptr){
 367              		.loc 1 81 35 is_stmt 0
 368 01f8 97000000 		call	_ZN15MemoryAllocator9findBlockEPNS_11BlockHeaderE
 368      E7800000 
 369              	.LVL25:
  82:src/MemoryAllocator.cpp ****         block->free= true;
GAS LISTING /tmp/ccRxWuF1.s 			page 11


 370              		.loc 1 82 5 is_stmt 1
 371 0200 63000502 		beqz	a0,.L31
  83:src/MemoryAllocator.cpp ****         return 0;
 372              		.loc 1 83 9
  83:src/MemoryAllocator.cpp ****         return 0;
 373              		.loc 1 83 20 is_stmt 0
 374 0204 93071000 		li	a5,1
 375 0208 2308F500 		sb	a5,16(a0)
  84:src/MemoryAllocator.cpp ****     }
 376              		.loc 1 84 9 is_stmt 1
  84:src/MemoryAllocator.cpp ****     }
 377              		.loc 1 84 16 is_stmt 0
 378 020c 13050000 		li	a0,0
 379              	.LVL26:
 380              	.L30:
 381              		.loc 1 87 1
 382 0210 83308100 		ld	ra,8(sp)
 383              		.cfi_remember_state
 384              		.cfi_restore 1
 385 0214 03340100 		ld	s0,0(sp)
 386              		.cfi_restore 8
 387              		.cfi_def_cfa 2, 16
 388 0218 13010101 		addi	sp,sp,16
 389              		.cfi_def_cfa_offset 0
 390 021c 67800000 		jr	ra
 391              	.LVL27:
 392              	.L31:
 393              		.cfi_restore_state
  86:src/MemoryAllocator.cpp **** }
 394              		.loc 1 86 12
 395 0220 13051000 		li	a0,1
 396              	.LVL28:
 397 0224 6FF0DFFE 		j	.L30
 398              		.cfi_endproc
 399              	.LFE7:
 401              		.align	2
 403              	_GLOBAL__sub_I__ZN15MemoryAllocator11freeMemHeadE:
 404              	.LFB9:
 405              		.loc 1 87 1 is_stmt 1
 406              		.cfi_startproc
 407 0228 130101FF 		addi	sp,sp,-16
 408              		.cfi_def_cfa_offset 16
 409 022c 23341100 		sd	ra,8(sp)
 410 0230 23308100 		sd	s0,0(sp)
 411              		.cfi_offset 1, -8
 412              		.cfi_offset 8, -16
 413 0234 13040101 		addi	s0,sp,16
 414              		.cfi_def_cfa 8, 0
 415              		.loc 1 87 1 is_stmt 0
 416 0238 B7050100 		li	a1,65536
 417 023c 9385F5FF 		addi	a1,a1,-1
 418 0240 13051000 		li	a0,1
 419 0244 97000000 		call	_Z41__static_initialization_and_destruction_0ii
 419      E7800000 
 420              	.LVL29:
 421 024c 83308100 		ld	ra,8(sp)
 422              		.cfi_restore 1
GAS LISTING /tmp/ccRxWuF1.s 			page 12


 423 0250 03340100 		ld	s0,0(sp)
 424              		.cfi_restore 8
 425              		.cfi_def_cfa 2, 16
 426 0254 13010101 		addi	sp,sp,16
 427              		.cfi_def_cfa_offset 0
 428 0258 67800000 		jr	ra
 429              		.cfi_endproc
 430              	.LFE9:
 432              		.section	.init_array,"aw"
 433              		.align	3
 434 0000 00000000 		.dword	_GLOBAL__sub_I__ZN15MemoryAllocator11freeMemHeadE
 434      00000000 
 435              		.globl	_ZN15MemoryAllocator8instanceE
 436              		.globl	_ZN15MemoryAllocator9heapStartE
 437              		.globl	_ZN15MemoryAllocator3topE
 438              		.globl	_ZN15MemoryAllocator11freeMemHeadE
 439              		.bss
 440              		.align	3
 441              		.set	.LANCHOR0,. + 0
 444              	_ZN15MemoryAllocator11freeMemHeadE:
 445 0000 00000000 		.zero	8
 445      00000000 
 448              	_ZN15MemoryAllocator8instanceE:
 449 0008 00000000 		.zero	8
 449      00000000 
 452              	_ZN15MemoryAllocator9heapStartE:
 453 0010 00000000 		.zero	8
 453      00000000 
 456              	_ZN15MemoryAllocator3topE:
 457 0018 00000000 		.zero	8
 457      00000000 
 458              		.text
 459              	.Letext0:
 460              		.file 3 "src/../h/../lib/hw.h"
GAS LISTING /tmp/ccRxWuF1.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccRxWuF1.s:8      .text:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccRxWuF1.s:12     .text:0000000000000000 .L0 
     /tmp/ccRxWuF1.s:14     .text:0000000000000000 .L0 
     /tmp/ccRxWuF1.s:15     .text:0000000000000004 .L0 
     /tmp/ccRxWuF1.s:17     .text:0000000000000008 .L0 
     /tmp/ccRxWuF1.s:19     .text:000000000000000c .L0 
     /tmp/ccRxWuF1.s:21     .text:000000000000000c .L0 
     /tmp/ccRxWuF1.s:25     .text:0000000000000018 .L0 
     /tmp/ccRxWuF1.s:26     .text:0000000000000018 .L0 
     /tmp/ccRxWuF1.s:27     .text:0000000000000018 .L0 
     /tmp/ccRxWuF1.s:29     .text:000000000000001c .L0 
     /tmp/ccRxWuF1.s:32     .text:0000000000000020 .L0 
     /tmp/ccRxWuF1.s:34     .text:0000000000000020 .L0 
     /tmp/ccRxWuF1.s:38     .text:000000000000002c .L0 
     /tmp/ccRxWuF1.s:42     .text:0000000000000040 .L0 
     /tmp/ccRxWuF1.s:43     .text:0000000000000044 .L0 
     /tmp/ccRxWuF1.s:49     .text:0000000000000044 _ZN15MemoryAllocator11getInstanceEv
     /tmp/ccRxWuF1.s:52     .text:0000000000000044 .L0 
     /tmp/ccRxWuF1.s:53     .text:0000000000000044 .L0 
     /tmp/ccRxWuF1.s:54     .text:0000000000000048 .L0 
     /tmp/ccRxWuF1.s:56     .text:000000000000004c .L0 
     /tmp/ccRxWuF1.s:58     .text:0000000000000050 .L0 
     /tmp/ccRxWuF1.s:60     .text:0000000000000050 .L0 
     /tmp/ccRxWuF1.s:61     .text:0000000000000050 .L0 
     /tmp/ccRxWuF1.s:63     .text:0000000000000058 .L0 
     /tmp/ccRxWuF1.s:66     .text:000000000000005c .L0 
     /tmp/ccRxWuF1.s:67     .text:000000000000005c .L0 
     /tmp/ccRxWuF1.s:69     .text:0000000000000068 .L0 
     /tmp/ccRxWuF1.s:70     .text:0000000000000068 .L0 
     /tmp/ccRxWuF1.s:71     .text:0000000000000068 .L0 
     /tmp/ccRxWuF1.s:73     .text:000000000000006c .L0 
     /tmp/ccRxWuF1.s:76     .text:0000000000000070 .L0 
     /tmp/ccRxWuF1.s:78     .text:0000000000000070 .L0 
     /tmp/ccRxWuF1.s:79     .text:0000000000000070 .L0 
     /tmp/ccRxWuF1.s:84     .text:0000000000000088 .L0 
     /tmp/ccRxWuF1.s:85     .text:0000000000000088 .L0 
     /tmp/ccRxWuF1.s:88     .text:0000000000000090 .L0 
     /tmp/ccRxWuF1.s:90     .text:0000000000000098 .L0 
     /tmp/ccRxWuF1.s:96     .text:0000000000000098 _ZN15MemoryAllocator11allocInHeapEm
     /tmp/ccRxWuF1.s:99     .text:0000000000000098 .L0 
     /tmp/ccRxWuF1.s:101    .text:0000000000000098 .L0 
     /tmp/ccRxWuF1.s:102    .text:000000000000009c .L0 
     /tmp/ccRxWuF1.s:104    .text:00000000000000a0 .L0 
     /tmp/ccRxWuF1.s:106    .text:00000000000000a4 .L0 
     /tmp/ccRxWuF1.s:112    .text:00000000000000a4 .L0 
     /tmp/ccRxWuF1.s:113    .text:00000000000000a4 .L0 
     /tmp/ccRxWuF1.s:114    .text:00000000000000a4 .L0 
     /tmp/ccRxWuF1.s:119    .text:00000000000000a8 .L0 
     /tmp/ccRxWuF1.s:120    .text:00000000000000a8 .L0 
     /tmp/ccRxWuF1.s:125    .text:00000000000000b4 .L0 
     /tmp/ccRxWuF1.s:128    .text:00000000000000c0 .L0 
     /tmp/ccRxWuF1.s:130    .text:00000000000000c4 .L0 
     /tmp/ccRxWuF1.s:133    .text:00000000000000c8 .L0 
     /tmp/ccRxWuF1.s:134    .text:00000000000000c8 .L0 
     /tmp/ccRxWuF1.s:135    .text:00000000000000c8 .L0 
GAS LISTING /tmp/ccRxWuF1.s 			page 14


     /tmp/ccRxWuF1.s:139    .text:00000000000000d0 .L0 
     /tmp/ccRxWuF1.s:140    .text:00000000000000d0 .L0 
     /tmp/ccRxWuF1.s:141    .text:00000000000000d4 .L0 
     /tmp/ccRxWuF1.s:142    .text:00000000000000d4 .L0 
     /tmp/ccRxWuF1.s:143    .text:00000000000000d4 .L0 
     /tmp/ccRxWuF1.s:145    .text:00000000000000d8 .L0 
     /tmp/ccRxWuF1.s:148    .text:00000000000000dc .L0 
     /tmp/ccRxWuF1.s:150    .text:00000000000000dc .L0 
     /tmp/ccRxWuF1.s:152    .text:00000000000000e4 .L0 
     /tmp/ccRxWuF1.s:158    .text:00000000000000e4 _ZN15MemoryAllocator8firstfitEm
     /tmp/ccRxWuF1.s:161    .text:00000000000000e4 .L0 
     /tmp/ccRxWuF1.s:163    .text:00000000000000e4 .L0 
     /tmp/ccRxWuF1.s:164    .text:00000000000000e8 .L0 
     /tmp/ccRxWuF1.s:166    .text:00000000000000ec .L0 
     /tmp/ccRxWuF1.s:168    .text:00000000000000f0 .L0 
     /tmp/ccRxWuF1.s:170    .text:00000000000000f0 .L0 
     /tmp/ccRxWuF1.s:171    .text:00000000000000f0 .L0 
     /tmp/ccRxWuF1.s:176    .text:00000000000000fc .L0 
     /tmp/ccRxWuF1.s:177    .text:00000000000000fc .L0 
     /tmp/ccRxWuF1.s:181    .text:0000000000000100 .L0 
     /tmp/ccRxWuF1.s:182    .text:0000000000000100 .L0 
     /tmp/ccRxWuF1.s:183    .text:0000000000000100 .L0 
     /tmp/ccRxWuF1.s:185    .text:0000000000000104 .L0 
     /tmp/ccRxWuF1.s:186    .text:0000000000000104 .L0 
     /tmp/ccRxWuF1.s:188    .text:0000000000000108 .L0 
     /tmp/ccRxWuF1.s:190    .text:000000000000010c .L0 
     /tmp/ccRxWuF1.s:192    .text:0000000000000110 .L0 
     /tmp/ccRxWuF1.s:195    .text:0000000000000114 .L0 
     /tmp/ccRxWuF1.s:196    .text:0000000000000118 .L0 
     /tmp/ccRxWuF1.s:197    .text:0000000000000118 .L0 
     /tmp/ccRxWuF1.s:199    .text:000000000000011c .L0 
     /tmp/ccRxWuF1.s:201    .text:0000000000000120 .L0 
     /tmp/ccRxWuF1.s:207    .text:0000000000000120 _ZN15MemoryAllocator9findBlockEPNS_11BlockHeaderE
     /tmp/ccRxWuF1.s:210    .text:0000000000000120 .L0 
     /tmp/ccRxWuF1.s:212    .text:0000000000000120 .L0 
     /tmp/ccRxWuF1.s:213    .text:0000000000000124 .L0 
     /tmp/ccRxWuF1.s:215    .text:0000000000000128 .L0 
     /tmp/ccRxWuF1.s:217    .text:000000000000012c .L0 
     /tmp/ccRxWuF1.s:219    .text:000000000000012c .L0 
     /tmp/ccRxWuF1.s:220    .text:000000000000012c .L0 
     /tmp/ccRxWuF1.s:221    .text:000000000000012c .L0 
     /tmp/ccRxWuF1.s:225    .text:0000000000000134 .L0 
     /tmp/ccRxWuF1.s:227    .text:0000000000000138 .L0 
     /tmp/ccRxWuF1.s:229    .text:000000000000013c .L0 
     /tmp/ccRxWuF1.s:230    .text:000000000000013c .L0 
     /tmp/ccRxWuF1.s:233    .text:0000000000000140 .L0 
     /tmp/ccRxWuF1.s:236    .text:0000000000000144 .L0 
     /tmp/ccRxWuF1.s:237    .text:0000000000000148 .L0 
     /tmp/ccRxWuF1.s:238    .text:0000000000000148 .L0 
     /tmp/ccRxWuF1.s:240    .text:000000000000014c .L0 
     /tmp/ccRxWuF1.s:242    .text:0000000000000150 .L0 
     /tmp/ccRxWuF1.s:248    .text:0000000000000150 _ZN15MemoryAllocator6mallocEm
     /tmp/ccRxWuF1.s:251    .text:0000000000000150 .L0 
     /tmp/ccRxWuF1.s:253    .text:0000000000000150 .L0 
     /tmp/ccRxWuF1.s:254    .text:0000000000000154 .L0 
     /tmp/ccRxWuF1.s:259    .text:0000000000000164 .L0 
     /tmp/ccRxWuF1.s:260    .text:0000000000000164 .L0 
GAS LISTING /tmp/ccRxWuF1.s 			page 15


     /tmp/ccRxWuF1.s:261    .text:0000000000000164 .L0 
     /tmp/ccRxWuF1.s:262    .text:0000000000000164 .L0 
     /tmp/ccRxWuF1.s:264    .text:0000000000000168 .L0 
     /tmp/ccRxWuF1.s:270    .text:000000000000016c .L0 
     /tmp/ccRxWuF1.s:271    .text:000000000000016c .L0 
     /tmp/ccRxWuF1.s:272    .text:000000000000016c .L0 
     /tmp/ccRxWuF1.s:274    .text:0000000000000170 .L0 
     /tmp/ccRxWuF1.s:280    .text:0000000000000174 .L0 
     /tmp/ccRxWuF1.s:281    .text:0000000000000174 .L0 
     /tmp/ccRxWuF1.s:285    .text:0000000000000180 .L0 
     /tmp/ccRxWuF1.s:290    .text:0000000000000184 .L0 
     /tmp/ccRxWuF1.s:291    .text:0000000000000188 .L0 
     /tmp/ccRxWuF1.s:292    .text:0000000000000188 .L0 
     /tmp/ccRxWuF1.s:294    .text:000000000000018c .L0 
     /tmp/ccRxWuF1.s:295    .text:000000000000018c .L0 
     /tmp/ccRxWuF1.s:297    .text:0000000000000190 .L0 
     /tmp/ccRxWuF1.s:300    .text:0000000000000194 .L0 
     /tmp/ccRxWuF1.s:303    .text:0000000000000198 .L0 
     /tmp/ccRxWuF1.s:307    .text:000000000000019c .L0 
     /tmp/ccRxWuF1.s:309    .text:000000000000019c .L0 
     /tmp/ccRxWuF1.s:310    .text:000000000000019c .L0 
     /tmp/ccRxWuF1.s:316    .text:00000000000001ac .L0 
     /tmp/ccRxWuF1.s:317    .text:00000000000001ac .L0 
     /tmp/ccRxWuF1.s:319    .text:00000000000001b0 .L0 
     /tmp/ccRxWuF1.s:320    .text:00000000000001b0 .L0 
     /tmp/ccRxWuF1.s:322    .text:00000000000001b4 .L0 
     /tmp/ccRxWuF1.s:323    .text:00000000000001b4 .L0 
     /tmp/ccRxWuF1.s:325    .text:00000000000001bc .L0 
     /tmp/ccRxWuF1.s:328    .text:00000000000001c0 .L0 
     /tmp/ccRxWuF1.s:329    .text:00000000000001c0 .L0 
     /tmp/ccRxWuF1.s:331    .text:00000000000001c8 .L0 
     /tmp/ccRxWuF1.s:333    .text:00000000000001cc .L0 
     /tmp/ccRxWuF1.s:334    .text:00000000000001cc .L0 
     /tmp/ccRxWuF1.s:337    .text:00000000000001d0 .L0 
     /tmp/ccRxWuF1.s:338    .text:00000000000001d0 .L0 
     /tmp/ccRxWuF1.s:340    .text:00000000000001d8 .L0 
     /tmp/ccRxWuF1.s:341    .text:00000000000001d8 .L0 
     /tmp/ccRxWuF1.s:344    .text:00000000000001dc .L0 
     /tmp/ccRxWuF1.s:345    .text:00000000000001dc .L0 
     /tmp/ccRxWuF1.s:347    .text:00000000000001e8 .L0 
     /tmp/ccRxWuF1.s:353    .text:00000000000001e8 _ZN15MemoryAllocator4freeEPv
     /tmp/ccRxWuF1.s:356    .text:00000000000001e8 .L0 
     /tmp/ccRxWuF1.s:358    .text:00000000000001e8 .L0 
     /tmp/ccRxWuF1.s:359    .text:00000000000001ec .L0 
     /tmp/ccRxWuF1.s:362    .text:00000000000001f4 .L0 
     /tmp/ccRxWuF1.s:363    .text:00000000000001f4 .L0 
     /tmp/ccRxWuF1.s:365    .text:00000000000001f8 .L0 
     /tmp/ccRxWuF1.s:367    .text:00000000000001f8 .L0 
     /tmp/ccRxWuF1.s:368    .text:00000000000001f8 .L0 
     /tmp/ccRxWuF1.s:371    .text:0000000000000200 .L0 
     /tmp/ccRxWuF1.s:373    .text:0000000000000204 .L0 
     /tmp/ccRxWuF1.s:374    .text:0000000000000204 .L0 
     /tmp/ccRxWuF1.s:377    .text:000000000000020c .L0 
     /tmp/ccRxWuF1.s:378    .text:000000000000020c .L0 
     /tmp/ccRxWuF1.s:382    .text:0000000000000210 .L0 
     /tmp/ccRxWuF1.s:383    .text:0000000000000214 .L0 
     /tmp/ccRxWuF1.s:384    .text:0000000000000214 .L0 
GAS LISTING /tmp/ccRxWuF1.s 			page 16


     /tmp/ccRxWuF1.s:386    .text:0000000000000218 .L0 
     /tmp/ccRxWuF1.s:387    .text:0000000000000218 .L0 
     /tmp/ccRxWuF1.s:389    .text:000000000000021c .L0 
     /tmp/ccRxWuF1.s:393    .text:0000000000000220 .L0 
     /tmp/ccRxWuF1.s:395    .text:0000000000000220 .L0 
     /tmp/ccRxWuF1.s:398    .text:0000000000000228 .L0 
     /tmp/ccRxWuF1.s:403    .text:0000000000000228 _GLOBAL__sub_I__ZN15MemoryAllocator11freeMemHeadE
     /tmp/ccRxWuF1.s:406    .text:0000000000000228 .L0 
     /tmp/ccRxWuF1.s:407    .text:0000000000000228 .L0 
     /tmp/ccRxWuF1.s:408    .text:000000000000022c .L0 
     /tmp/ccRxWuF1.s:411    .text:0000000000000234 .L0 
     /tmp/ccRxWuF1.s:412    .text:0000000000000234 .L0 
     /tmp/ccRxWuF1.s:414    .text:0000000000000238 .L0 
     /tmp/ccRxWuF1.s:416    .text:0000000000000238 .L0 
     /tmp/ccRxWuF1.s:422    .text:0000000000000250 .L0 
     /tmp/ccRxWuF1.s:424    .text:0000000000000254 .L0 
     /tmp/ccRxWuF1.s:425    .text:0000000000000254 .L0 
     /tmp/ccRxWuF1.s:427    .text:0000000000000258 .L0 
     /tmp/ccRxWuF1.s:429    .text:000000000000025c .L0 
     /tmp/ccRxWuF1.s:448    .bss:0000000000000008 _ZN15MemoryAllocator8instanceE
     /tmp/ccRxWuF1.s:452    .bss:0000000000000010 _ZN15MemoryAllocator9heapStartE
     /tmp/ccRxWuF1.s:456    .bss:0000000000000018 _ZN15MemoryAllocator3topE
     /tmp/ccRxWuF1.s:444    .bss:0000000000000000 _ZN15MemoryAllocator11freeMemHeadE
     /tmp/ccRxWuF1.s:441    .bss:0000000000000000 .LANCHOR0
     /tmp/ccRxWuF1.s:461    .text:000000000000025c .L0 
     /tmp/ccRxWuF1.s:38     .text:000000000000002c .L0 
     /tmp/ccRxWuF1.s:40     .text:0000000000000038 .L0 
     /tmp/ccRxWuF1.s:61     .text:0000000000000050 .L0 
     /tmp/ccRxWuF1.s:67     .text:000000000000005c .L0 
     /tmp/ccRxWuF1.s:79     .text:0000000000000070 .L0 
     /tmp/ccRxWuF1.s:80     .text:0000000000000078 .L0 
     /tmp/ccRxWuF1.s:120    .text:00000000000000a8 .L0 
     /tmp/ccRxWuF1.s:125    .text:00000000000000b4 .L0 
     /tmp/ccRxWuF1.s:135    .text:00000000000000c8 .L0 
     /tmp/ccRxWuF1.s:171    .text:00000000000000f0 .L0 
     /tmp/ccRxWuF1.s:221    .text:000000000000012c .L0 
     /tmp/ccRxWuF1.s:323    .text:00000000000001b4 .L0 
     /tmp/ccRxWuF1.s:329    .text:00000000000001c0 .L0 
     /tmp/ccRxWuF1.s:338    .text:00000000000001d0 .L0 
     /tmp/ccRxWuF1.s:345    .text:00000000000001dc .L0 
     /tmp/ccRxWuF1.s:31     .text:0000000000000020 .L4
     /tmp/ccRxWuF1.s:23     .text:0000000000000014 .L1
     /tmp/ccRxWuF1.s:75     .text:0000000000000070 .L8
     /tmp/ccRxWuF1.s:64     .text:000000000000005c .L6
     /tmp/ccRxWuF1.s:147    .text:00000000000000dc .L11
     /tmp/ccRxWuF1.s:138    .text:00000000000000d0 .L9
     /tmp/ccRxWuF1.s:180    .text:0000000000000100 .L16
     /tmp/ccRxWuF1.s:193    .text:0000000000000114 .L13
     /tmp/ccRxWuF1.s:174    .text:00000000000000fc .L15
     /tmp/ccRxWuF1.s:234    .text:0000000000000144 .L18
     /tmp/ccRxWuF1.s:223    .text:0000000000000134 .L20
     /tmp/ccRxWuF1.s:306    .text:000000000000019c .L27
     /tmp/ccRxWuF1.s:342    .text:00000000000001dc .L28
     /tmp/ccRxWuF1.s:335    .text:00000000000001d0 .L25
     /tmp/ccRxWuF1.s:287    .text:0000000000000184 .L22
     /tmp/ccRxWuF1.s:326    .text:00000000000001c0 .L24
     /tmp/ccRxWuF1.s:392    .text:0000000000000220 .L31
GAS LISTING /tmp/ccRxWuF1.s 			page 17


     /tmp/ccRxWuF1.s:380    .text:0000000000000210 .L30
     /tmp/ccRxWuF1.s:1146   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccRxWuF1.s:2120   .debug_str:00000000000001eb .LASF47
     /tmp/ccRxWuF1.s:2144   .debug_str:000000000000037c .LASF48
     /tmp/ccRxWuF1.s:2146   .debug_str:0000000000000394 .LASF49
     /tmp/ccRxWuF1.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccRxWuF1.s:459    .text:000000000000025c .Letext0
     /tmp/ccRxWuF1.s:2064   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccRxWuF1.s:2126   .debug_str:00000000000002c6 .LASF0
     /tmp/ccRxWuF1.s:2110   .debug_str:0000000000000173 .LASF1
     /tmp/ccRxWuF1.s:2100   .debug_str:0000000000000125 .LASF2
     /tmp/ccRxWuF1.s:2080   .debug_str:000000000000006d .LASF4
     /tmp/ccRxWuF1.s:2108   .debug_str:0000000000000161 .LASF3
     /tmp/ccRxWuF1.s:2070   .debug_str:0000000000000023 .LASF5
     /tmp/ccRxWuF1.s:2066   .debug_str:0000000000000000 .LASF6
     /tmp/ccRxWuF1.s:2092   .debug_str:00000000000000f1 .LASF7
     /tmp/ccRxWuF1.s:2136   .debug_str:0000000000000318 .LASF8
     /tmp/ccRxWuF1.s:2078   .debug_str:000000000000005f .LASF9
     /tmp/ccRxWuF1.s:2176   .debug_str:00000000000004a4 .LASF10
     /tmp/ccRxWuF1.s:2096   .debug_str:000000000000010a .LASF11
     /tmp/ccRxWuF1.s:2166   .debug_str:0000000000000456 .LASF12
     /tmp/ccRxWuF1.s:2132   .debug_str:00000000000002e4 .LASF13
     /tmp/ccRxWuF1.s:2112   .debug_str:0000000000000186 .LASF14
     /tmp/ccRxWuF1.s:2090   .debug_str:00000000000000db .LASF15
     /tmp/ccRxWuF1.s:2140   .debug_str:000000000000035a .LASF16
     /tmp/ccRxWuF1.s:2068   .debug_str:0000000000000013 .LASF50
     /tmp/ccRxWuF1.s:2122   .debug_str:00000000000002af .LASF51
     /tmp/ccRxWuF1.s:2072   .debug_str:000000000000002a .LASF17
     /tmp/ccRxWuF1.s:2172   .debug_str:0000000000000498 .LASF18
     /tmp/ccRxWuF1.s:2148   .debug_str:00000000000003b2 .LASF19
     /tmp/ccRxWuF1.s:2150   .debug_str:00000000000003b7 .LASF20
     /tmp/ccRxWuF1.s:2128   .debug_str:00000000000002d3 .LASF21
     /tmp/ccRxWuF1.s:2116   .debug_str:00000000000001af .LASF22
     /tmp/ccRxWuF1.s:2076   .debug_str:0000000000000059 .LASF23
     /tmp/ccRxWuF1.s:2114   .debug_str:0000000000000192 .LASF25
     /tmp/ccRxWuF1.s:2160   .debug_str:0000000000000423 .LASF24
     /tmp/ccRxWuF1.s:2086   .debug_str:000000000000009d .LASF26
     /tmp/ccRxWuF1.s:2098   .debug_str:0000000000000119 .LASF27
     /tmp/ccRxWuF1.s:2084   .debug_str:0000000000000079 .LASF28
     /tmp/ccRxWuF1.s:2162   .debug_str:000000000000042d .LASF29
     /tmp/ccRxWuF1.s:2164   .debug_str:0000000000000436 .LASF30
     /tmp/ccRxWuF1.s:2106   .debug_str:0000000000000157 .LASF31
     /tmp/ccRxWuF1.s:2118   .debug_str:00000000000001b9 .LASF32
     /tmp/ccRxWuF1.s:2142   .debug_str:0000000000000370 .LASF52
     /tmp/ccRxWuF1.s:2134   .debug_str:00000000000002f4 .LASF53
     /tmp/ccRxWuF1.s:2174   .debug_str:000000000000049d .LASF54
     /tmp/ccRxWuF1.s:2156   .debug_str:00000000000003eb .LASF55
     /tmp/ccRxWuF1.s:2088   .debug_str:00000000000000be .LASF33
     /tmp/ccRxWuF1.s:2082   .debug_str:0000000000000074 .LASF34
     /tmp/ccRxWuF1.s:2130   .debug_str:00000000000002df .LASF35
     /tmp/ccRxWuF1.s:2170   .debug_str:0000000000000475 .LASF36
     /tmp/ccRxWuF1.s:2158   .debug_str:0000000000000409 .LASF37
     /tmp/ccRxWuF1.s:2152   .debug_str:00000000000003c0 .LASF38
     /tmp/ccRxWuF1.s:2104   .debug_str:0000000000000138 .LASF39
     /tmp/ccRxWuF1.s:2138   .debug_str:0000000000000328 .LASF40
     /tmp/ccRxWuF1.s:404    .text:0000000000000228 .LFB9
     /tmp/ccRxWuF1.s:430    .text:000000000000025c .LFE9
GAS LISTING /tmp/ccRxWuF1.s 			page 18


     /tmp/ccRxWuF1.s:420    .text:000000000000024c .LVL29
     /tmp/ccRxWuF1.s:2074   .debug_str:000000000000002f .LASF41
     /tmp/ccRxWuF1.s:9      .text:0000000000000000 .LFB8
     /tmp/ccRxWuF1.s:44     .text:0000000000000044 .LFE8
     /tmp/ccRxWuF1.s:2168   .debug_str:0000000000000466 .LASF42
     /tmp/ccRxWuF1.s:2124   .debug_str:00000000000002bb .LASF43
     /tmp/ccRxWuF1.s:354    .text:00000000000001e8 .LFB7
     /tmp/ccRxWuF1.s:399    .text:0000000000000228 .LFE7
     /tmp/ccRxWuF1.s:2102   .debug_str:0000000000000133 .LASF45
     /tmp/ccRxWuF1.s:1855   .debug_loc:0000000000000000 .LLST12
     /tmp/ccRxWuF1.s:1869   .debug_loc:0000000000000039 .LLST13
     /tmp/ccRxWuF1.s:2094   .debug_str:0000000000000104 .LASF44
     /tmp/ccRxWuF1.s:1883   .debug_loc:0000000000000072 .LLST14
     /tmp/ccRxWuF1.s:369    .text:0000000000000200 .LVL25
     /tmp/ccRxWuF1.s:249    .text:0000000000000150 .LFB6
     /tmp/ccRxWuF1.s:348    .text:00000000000001e8 .LFE6
     /tmp/ccRxWuF1.s:1894   .debug_loc:00000000000000a8 .LLST7
     /tmp/ccRxWuF1.s:1916   .debug_loc:0000000000000107 .LLST8
     /tmp/ccRxWuF1.s:279    .text:0000000000000174 .LBB11
     /tmp/ccRxWuF1.s:288    .text:0000000000000184 .LBE11
     /tmp/ccRxWuF1.s:1943   .debug_loc:000000000000016b .LLST11
     /tmp/ccRxWuF1.s:283    .text:0000000000000180 .LVL17
     /tmp/ccRxWuF1.s:268    .text:000000000000016c .LBB9
     /tmp/ccRxWuF1.s:277    .text:0000000000000174 .LBE9
     /tmp/ccRxWuF1.s:1954   .debug_loc:00000000000001a1 .LLST9
     /tmp/ccRxWuF1.s:1961   .debug_loc:00000000000001c4 .LLST10
     /tmp/ccRxWuF1.s:314    .text:00000000000001ac .LVL23
     /tmp/ccRxWuF1.s:208    .text:0000000000000120 .LFB5
     /tmp/ccRxWuF1.s:243    .text:0000000000000150 .LFE5
     /tmp/ccRxWuF1.s:1968   .debug_loc:00000000000001e7 .LLST6
     /tmp/ccRxWuF1.s:159    .text:00000000000000e4 .LFB4
     /tmp/ccRxWuF1.s:202    .text:0000000000000120 .LFE4
     /tmp/ccRxWuF1.s:1982   .debug_loc:0000000000000220 .LLST5
     /tmp/ccRxWuF1.s:97     .text:0000000000000098 .LFB3
     /tmp/ccRxWuF1.s:153    .text:00000000000000e4 .LFE3
     /tmp/ccRxWuF1.s:1996   .debug_loc:0000000000000259 .LLST0
     /tmp/ccRxWuF1.s:2010   .debug_loc:0000000000000292 .LLST1
     /tmp/ccRxWuF1.s:2154   .debug_str:00000000000003e0 .LASF46
     /tmp/ccRxWuF1.s:2030   .debug_loc:00000000000002e0 .LLST2
     /tmp/ccRxWuF1.s:109    .text:00000000000000a4 .LBB7
     /tmp/ccRxWuF1.s:117    .text:00000000000000a8 .LBE7
     /tmp/ccRxWuF1.s:2037   .debug_loc:0000000000000303 .LLST3
     /tmp/ccRxWuF1.s:2044   .debug_loc:0000000000000326 .LLST4
     /tmp/ccRxWuF1.s:50     .text:0000000000000044 .LFB2
     /tmp/ccRxWuF1.s:91     .text:0000000000000098 .LFE2
     /tmp/ccRxWuF1.s:357    .text:00000000000001e8 .LVL24
     /tmp/ccRxWuF1.s:379    .text:0000000000000210 .LVL26
     /tmp/ccRxWuF1.s:391    .text:0000000000000220 .LVL27
     /tmp/ccRxWuF1.s:396    .text:0000000000000224 .LVL28
     /tmp/ccRxWuF1.s:252    .text:0000000000000150 .LVL14
     /tmp/ccRxWuF1.s:301    .text:0000000000000194 .LVL20
     /tmp/ccRxWuF1.s:305    .text:000000000000019c .LVL21
     /tmp/ccRxWuF1.s:275    .text:0000000000000174 .LVL16
     /tmp/ccRxWuF1.s:298    .text:0000000000000190 .LVL19
     /tmp/ccRxWuF1.s:286    .text:0000000000000184 .LVL18
     /tmp/ccRxWuF1.s:312    .text:00000000000001a4 .LVL22
     /tmp/ccRxWuF1.s:267    .text:000000000000016c .LVL15
GAS LISTING /tmp/ccRxWuF1.s 			page 19


     /tmp/ccRxWuF1.s:211    .text:0000000000000120 .LVL11
     /tmp/ccRxWuF1.s:222    .text:0000000000000134 .LVL12
     /tmp/ccRxWuF1.s:162    .text:00000000000000e4 .LVL8
     /tmp/ccRxWuF1.s:172    .text:00000000000000f8 .LVL9
     /tmp/ccRxWuF1.s:100    .text:0000000000000098 .LVL1
     /tmp/ccRxWuF1.s:121    .text:00000000000000b0 .LVL4
     /tmp/ccRxWuF1.s:115    .text:00000000000000a8 .LVL3
     /tmp/ccRxWuF1.s:123    .text:00000000000000b4 .LVL5
     /tmp/ccRxWuF1.s:132    .text:00000000000000c8 .LVL6
     /tmp/ccRxWuF1.s:137    .text:00000000000000d0 .LVL7
     /tmp/ccRxWuF1.s:108    .text:00000000000000a4 .LVL2
     /tmp/ccRxWuF1.s:462    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
