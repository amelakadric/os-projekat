GAS LISTING /tmp/ccrQlmmC.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z9mem_allocm
   9              	_Z9mem_allocm:
  10              	.LFB36:
  11              		.file 1 "src/../h/syscall_c.h"
   1:src/../h/syscall_c.h **** //#include "../lib/mem.h"
   2:src/../h/syscall_c.h **** #include "TCB.hpp"
   3:src/../h/syscall_c.h **** 
   4:src/../h/syscall_c.h **** void* mem_alloc(size_t size){
  12              		.loc 1 4 29
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
   5:src/../h/syscall_c.h ****     __asm__ volatile("mv a1, %0"::"r"(size));
  21              		.loc 1 5 5
  22              		.loc 1 5 45 is_stmt 0
  23              	#APP
  24              	# 5 "src/../h/syscall_c.h" 1
   6              	    __asm__ volatile("li a0, 0x01");
  25              		mv a1, a0
  26              	# 0 "" 2
  27              		.loc 1 6 5 is_stmt 1
  28              		.loc 1 6 36 is_stmt 0
  29              	# 6 "src/../h/syscall_c.h" 1
   7              	    __asm__ volatile("ecall");
  30              		li a0, 0x01
  31              	# 0 "" 2
  32              		.loc 1 7 5 is_stmt 1
  33              		.loc 1 7 30 is_stmt 0
  34              	# 7 "src/../h/syscall_c.h" 1
   8              	    void* a0;
  35              		ecall
  36              	# 0 "" 2
  37              		.loc 1 8 5 is_stmt 1
   9:src/../h/syscall_c.h ****     __asm__ volatile ("mv %[a0], a0" : [a0] "=r"(a0));
  38              		.loc 1 9 5
  39              		.loc 1 9 54 is_stmt 0
  40              	# 9 "src/../h/syscall_c.h" 1
  10              	    return a0;
  41              		mv a0, a0
  42              	# 0 "" 2
  43              	.LVL1:
  44              		.loc 1 10 5 is_stmt 1
  11:src/../h/syscall_c.h **** }
  45              		.loc 1 11 1 is_stmt 0
  46              	#NO_APP
  47 001c 03348100 		ld	s0,8(sp)
GAS LISTING /tmp/ccrQlmmC.s 			page 2


  48              		.cfi_restore 8
  49              		.cfi_def_cfa 2, 16
  50 0020 13010101 		addi	sp,sp,16
  51              		.cfi_def_cfa_offset 0
  52 0024 67800000 		jr	ra
  53              		.cfi_endproc
  54              	.LFE36:
  56              		.align	2
  57              		.globl	_Z8mem_freePv
  59              	_Z8mem_freePv:
  60              	.LFB37:
  12:src/../h/syscall_c.h **** 
  13:src/../h/syscall_c.h **** int mem_free (void* r){
  61              		.loc 1 13 23 is_stmt 1
  62              		.cfi_startproc
  63              	.LVL2:
  64 0028 130101FF 		addi	sp,sp,-16
  65              		.cfi_def_cfa_offset 16
  66 002c 23348100 		sd	s0,8(sp)
  67              		.cfi_offset 8, -8
  68 0030 13040101 		addi	s0,sp,16
  69              		.cfi_def_cfa 8, 0
  14:src/../h/syscall_c.h ****     __asm__ volatile("mv a2, %0"::"r"(r));
  70              		.loc 1 14 5
  71              		.loc 1 14 42 is_stmt 0
  72              	#APP
  73              	# 14 "src/../h/syscall_c.h" 1
  15              	    __asm__ volatile("li a0, 0x02");
  74              		mv a2, a0
  75              	# 0 "" 2
  76              		.loc 1 15 5 is_stmt 1
  77              		.loc 1 15 36 is_stmt 0
  78              	# 15 "src/../h/syscall_c.h" 1
  16              	    __asm__ volatile("ecall");
  79              		li a0, 0x02
  80              	# 0 "" 2
  81              		.loc 1 16 5 is_stmt 1
  82              		.loc 1 16 30 is_stmt 0
  83              	# 16 "src/../h/syscall_c.h" 1
  17              	
  18:src/../h/syscall_c.h ****     uint64 a0;
  84              		ecall
  85              	# 0 "" 2
  86              		.loc 1 18 5 is_stmt 1
  19:src/../h/syscall_c.h ****     __asm__ volatile ("mv %[a0], a0" : [a0] "=r"(a0));
  87              		.loc 1 19 5
  88              		.loc 1 19 54 is_stmt 0
  89              	# 19 "src/../h/syscall_c.h" 1
  20              	    return a0;
  90              		mv a0, a0
  91              	# 0 "" 2
  92              	.LVL3:
  93              		.loc 1 20 5 is_stmt 1
  21:src/../h/syscall_c.h **** }
  94              		.loc 1 21 1 is_stmt 0
  95              	#NO_APP
  96 0044 1B050500 		sext.w	a0,a0
GAS LISTING /tmp/ccrQlmmC.s 			page 3


  97              	.LVL4:
  98 0048 03348100 		ld	s0,8(sp)
  99              		.cfi_restore 8
 100              		.cfi_def_cfa 2, 16
 101 004c 13010101 		addi	sp,sp,16
 102              		.cfi_def_cfa_offset 0
 103 0050 67800000 		jr	ra
 104              		.cfi_endproc
 105              	.LFE37:
 107              		.align	2
 108              		.globl	_Z13thread_createPP3TCBPFvPvES2_
 110              	_Z13thread_createPP3TCBPFvPvES2_:
 111              	.LFB38:
  22:src/../h/syscall_c.h **** 
  23:src/../h/syscall_c.h **** int thread_create (thread_t* handle, void(*start_routine)(void*), void* arg){
 112              		.loc 1 23 77 is_stmt 1
 113              		.cfi_startproc
 114              	.LVL5:
 115 0054 130101FF 		addi	sp,sp,-16
 116              		.cfi_def_cfa_offset 16
 117 0058 23348100 		sd	s0,8(sp)
 118              		.cfi_offset 8, -8
 119 005c 13040101 		addi	s0,sp,16
 120              		.cfi_def_cfa 8, 0
  24:src/../h/syscall_c.h ****     __asm__ volatile("mv a5, %0"::"r"(arg));
 121              		.loc 1 24 5
 122              		.loc 1 24 44 is_stmt 0
 123              	#APP
 124              	# 24 "src/../h/syscall_c.h" 1
  25              	    __asm__ volatile("mv a4, %0"::"r"(start_routine));
 125              		mv a5, a2
 126              	# 0 "" 2
 127              		.loc 1 25 5 is_stmt 1
 128              		.loc 1 25 54 is_stmt 0
 129              	# 25 "src/../h/syscall_c.h" 1
  26              	    __asm__ volatile("mv a3, %0"::"r"(handle));
 130              		mv a4, a1
 131              	# 0 "" 2
 132              		.loc 1 26 5 is_stmt 1
 133              		.loc 1 26 47 is_stmt 0
 134              	# 26 "src/../h/syscall_c.h" 1
  27              	    __asm__ volatile("li a0, 0x11");
 135              		mv a3, a0
 136              	# 0 "" 2
 137              		.loc 1 27 5 is_stmt 1
 138              		.loc 1 27 36 is_stmt 0
 139              	# 27 "src/../h/syscall_c.h" 1
  28              	    __asm__ volatile("ecall");
 140              		li a0, 0x11
 141              	# 0 "" 2
 142              		.loc 1 28 5 is_stmt 1
 143              		.loc 1 28 30 is_stmt 0
 144              	# 28 "src/../h/syscall_c.h" 1
  29              	    uint64 a0;
 145              		ecall
 146              	# 0 "" 2
 147              		.loc 1 29 5 is_stmt 1
GAS LISTING /tmp/ccrQlmmC.s 			page 4


  30:src/../h/syscall_c.h ****     __asm__ volatile ("mv %[a0], a0" : [a0] "=r"(a0));
 148              		.loc 1 30 5
 149              		.loc 1 30 54 is_stmt 0
 150              	# 30 "src/../h/syscall_c.h" 1
  31              	
 151              		mv a0, a0
 152              	# 0 "" 2
 153              	.LVL6:
  32:src/../h/syscall_c.h ****     return a0;
 154              		.loc 1 32 5 is_stmt 1
  33:src/../h/syscall_c.h **** }
 155              		.loc 1 33 1 is_stmt 0
 156              	#NO_APP
 157 0078 1B050500 		sext.w	a0,a0
 158              	.LVL7:
 159 007c 03348100 		ld	s0,8(sp)
 160              		.cfi_restore 8
 161              		.cfi_def_cfa 2, 16
 162 0080 13010101 		addi	sp,sp,16
 163              		.cfi_def_cfa_offset 0
 164 0084 67800000 		jr	ra
 165              		.cfi_endproc
 166              	.LFE38:
 168              		.align	2
 169              		.globl	_Z11thread_exitv
 171              	_Z11thread_exitv:
 172              	.LFB39:
  34:src/../h/syscall_c.h **** 
  35:src/../h/syscall_c.h **** int thread_exit(){
 173              		.loc 1 35 18 is_stmt 1
 174              		.cfi_startproc
 175 0088 130101FF 		addi	sp,sp,-16
 176              		.cfi_def_cfa_offset 16
 177 008c 23348100 		sd	s0,8(sp)
 178              		.cfi_offset 8, -8
 179 0090 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
  36:src/../h/syscall_c.h ****     __asm__ volatile("li a0, 0x12");
 181              		.loc 1 36 5
 182              		.loc 1 36 36 is_stmt 0
 183              	#APP
 184              	# 36 "src/../h/syscall_c.h" 1
  37              	    __asm__ volatile("ecall");
 185              		li a0, 0x12
 186              	# 0 "" 2
 187              		.loc 1 37 5 is_stmt 1
 188              		.loc 1 37 30 is_stmt 0
 189              	# 37 "src/../h/syscall_c.h" 1
  38              	
  39:src/../h/syscall_c.h ****     uint64 a0;
 190              		ecall
 191              	# 0 "" 2
 192              		.loc 1 39 5 is_stmt 1
  40:src/../h/syscall_c.h ****     __asm__ volatile ("mv %[a0], a0" : [a0] "=r"(a0));
 193              		.loc 1 40 5
 194              		.loc 1 40 54 is_stmt 0
 195              	# 40 "src/../h/syscall_c.h" 1
GAS LISTING /tmp/ccrQlmmC.s 			page 5


  41              	    return a0;
 196              		mv a0, a0
 197              	# 0 "" 2
 198              	.LVL8:
 199              		.loc 1 41 5 is_stmt 1
  42:src/../h/syscall_c.h **** }
 200              		.loc 1 42 1 is_stmt 0
 201              	#NO_APP
 202 00a0 1B050500 		sext.w	a0,a0
 203              	.LVL9:
 204 00a4 03348100 		ld	s0,8(sp)
 205              		.cfi_restore 8
 206              		.cfi_def_cfa 2, 16
 207 00a8 13010101 		addi	sp,sp,16
 208              		.cfi_def_cfa_offset 0
 209 00ac 67800000 		jr	ra
 210              		.cfi_endproc
 211              	.LFE39:
 213              		.align	2
 214              		.globl	_Z15thread_dispatchv
 216              	_Z15thread_dispatchv:
 217              	.LFB40:
  43:src/../h/syscall_c.h **** 
  44:src/../h/syscall_c.h **** void thread_dispatch(){
 218              		.loc 1 44 23 is_stmt 1
 219              		.cfi_startproc
 220 00b0 130101FF 		addi	sp,sp,-16
 221              		.cfi_def_cfa_offset 16
 222 00b4 23348100 		sd	s0,8(sp)
 223              		.cfi_offset 8, -8
 224 00b8 13040101 		addi	s0,sp,16
 225              		.cfi_def_cfa 8, 0
  45:src/../h/syscall_c.h ****     __asm__ volatile("li a0, 0x13");
 226              		.loc 1 45 5
 227              		.loc 1 45 36 is_stmt 0
 228              	#APP
 229              	# 45 "src/../h/syscall_c.h" 1
  46              	    __asm__ volatile("ecall");
 230              		li a0, 0x13
 231              	# 0 "" 2
 232              		.loc 1 46 5 is_stmt 1
 233              		.loc 1 46 30 is_stmt 0
 234              	# 46 "src/../h/syscall_c.h" 1
  47              	
  48:src/../h/syscall_c.h **** }
 235              		ecall
 236              	# 0 "" 2
 237              		.loc 1 48 1
 238              	#NO_APP
 239 00c4 03348100 		ld	s0,8(sp)
 240              		.cfi_restore 8
 241              		.cfi_def_cfa 2, 16
 242 00c8 13010101 		addi	sp,sp,16
 243              		.cfi_def_cfa_offset 0
 244 00cc 67800000 		jr	ra
 245              		.cfi_endproc
 246              	.LFE40:
GAS LISTING /tmp/ccrQlmmC.s 			page 6


 248              		.align	2
 249              		.globl	_Znwm
 251              	_Znwm:
 252              	.LFB58:
 253              		.file 2 "src/../h/syscall_cpp.hpp"
   1:src/../h/syscall_cpp.hpp **** #ifndef _syscall_cpp
   2:src/../h/syscall_cpp.hpp **** #define _syscall_cpp
   3:src/../h/syscall_cpp.hpp **** #include "syscall_c.h"
   4:src/../h/syscall_cpp.hpp **** //#include "../lib/mem.h"
   5:src/../h/syscall_cpp.hpp **** #include "riscv.hpp"
   6:src/../h/syscall_cpp.hpp **** 
   7:src/../h/syscall_cpp.hpp **** 
   8:src/../h/syscall_cpp.hpp **** void* operator new (size_t n);
   9:src/../h/syscall_cpp.hpp **** void operator delete (void* p);
  10:src/../h/syscall_cpp.hpp **** 
  11:src/../h/syscall_cpp.hpp **** 
  12:src/../h/syscall_cpp.hpp **** class Thread {
  13:src/../h/syscall_cpp.hpp **** public:
  14:src/../h/syscall_cpp.hpp ****     Thread (void (*body)(void*), void* arg);
  15:src/../h/syscall_cpp.hpp **** //        thread_create(&myHandle, body, arg);
  16:src/../h/syscall_cpp.hpp **** 
  17:src/../h/syscall_cpp.hpp ****     virtual ~Thread ();
  18:src/../h/syscall_cpp.hpp ****     int start ();
  19:src/../h/syscall_cpp.hpp **** 
  20:src/../h/syscall_cpp.hpp **** //        if (myHandle->getBody()!= nullptr) { Scheduler::put(myHandle); return 0;}
  21:src/../h/syscall_cpp.hpp **** //        return 1;
  22:src/../h/syscall_cpp.hpp **** //    }
  23:src/../h/syscall_cpp.hpp ****     static void dispatch ();
  24:src/../h/syscall_cpp.hpp **** //        thread_dispatch();
  25:src/../h/syscall_cpp.hpp **** //    }
  26:src/../h/syscall_cpp.hpp ****     static int sleep (time_t);
  27:src/../h/syscall_cpp.hpp **** //        return 0;}
  28:src/../h/syscall_cpp.hpp **** protected:
  29:src/../h/syscall_cpp.hpp ****     Thread ();
  30:src/../h/syscall_cpp.hpp ****     virtual void run ();
  31:src/../h/syscall_cpp.hpp **** private:
  32:src/../h/syscall_cpp.hpp **** //    thread_t* myHandle;
  33:src/../h/syscall_cpp.hpp **** };
  34:src/../h/syscall_cpp.hpp **** 
  35:src/../h/syscall_cpp.hpp **** 
  36:src/../h/syscall_cpp.hpp **** //class Semaphore {
  37:src/../h/syscall_cpp.hpp **** //public:
  38:src/../h/syscall_cpp.hpp **** //    Semaphore (unsigned init = 1);
  39:src/../h/syscall_cpp.hpp **** //    virtual ~Semaphore ();
  40:src/../h/syscall_cpp.hpp **** //    int wait ();
  41:src/../h/syscall_cpp.hpp **** //    int signal ();
  42:src/../h/syscall_cpp.hpp **** //private:
  43:src/../h/syscall_cpp.hpp **** //    sem_t myHandle;
  44:src/../h/syscall_cpp.hpp **** //};
  45:src/../h/syscall_cpp.hpp **** //
  46:src/../h/syscall_cpp.hpp **** //
  47:src/../h/syscall_cpp.hpp **** //class PeriodicThread : public Thread {
  48:src/../h/syscall_cpp.hpp **** //protected:
  49:src/../h/syscall_cpp.hpp **** //    PeriodicThread (time_t period);
  50:src/../h/syscall_cpp.hpp **** //    virtual void periodicActivation () {}
  51:src/../h/syscall_cpp.hpp **** //};
  52:src/../h/syscall_cpp.hpp **** //
GAS LISTING /tmp/ccrQlmmC.s 			page 7


  53:src/../h/syscall_cpp.hpp **** //
  54:src/../h/syscall_cpp.hpp **** //class Console {
  55:src/../h/syscall_cpp.hpp **** //public:
  56:src/../h/syscall_cpp.hpp **** //    static char getc ();
  57:src/../h/syscall_cpp.hpp **** //    static void putc (char);
  58:src/../h/syscall_cpp.hpp **** //};
  59:src/../h/syscall_cpp.hpp **** 
  60:src/../h/syscall_cpp.hpp **** void *operator new(size_t n)
  61:src/../h/syscall_cpp.hpp **** {
 254              		.loc 2 61 1 is_stmt 1
 255              		.cfi_startproc
 256              	.LVL10:
 257 00d0 130101FF 		addi	sp,sp,-16
 258              		.cfi_def_cfa_offset 16
 259 00d4 23341100 		sd	ra,8(sp)
 260 00d8 23308100 		sd	s0,0(sp)
 261              		.cfi_offset 1, -8
 262              		.cfi_offset 8, -16
 263 00dc 13040101 		addi	s0,sp,16
 264              		.cfi_def_cfa 8, 0
  62:src/../h/syscall_cpp.hpp ****     return mem_alloc(n);
 265              		.loc 2 62 5
 266              		.loc 2 62 21 is_stmt 0
 267 00e0 97000000 		call	_Z9mem_allocm
 267      E7800000 
 268              	.LVL11:
  63:src/../h/syscall_cpp.hpp **** }
 269              		.loc 2 63 1
 270 00e8 83308100 		ld	ra,8(sp)
 271              		.cfi_restore 1
 272 00ec 03340100 		ld	s0,0(sp)
 273              		.cfi_restore 8
 274              		.cfi_def_cfa 2, 16
 275 00f0 13010101 		addi	sp,sp,16
 276              		.cfi_def_cfa_offset 0
 277 00f4 67800000 		jr	ra
 278              		.cfi_endproc
 279              	.LFE58:
 281              		.align	2
 282              		.globl	_Znam
 284              	_Znam:
 285              	.LFB59:
  64:src/../h/syscall_cpp.hpp **** 
  65:src/../h/syscall_cpp.hpp **** void *operator new[](size_t n)
  66:src/../h/syscall_cpp.hpp **** {
 286              		.loc 2 66 1 is_stmt 1
 287              		.cfi_startproc
 288              	.LVL12:
 289 00f8 130101FF 		addi	sp,sp,-16
 290              		.cfi_def_cfa_offset 16
 291 00fc 23341100 		sd	ra,8(sp)
 292 0100 23308100 		sd	s0,0(sp)
 293              		.cfi_offset 1, -8
 294              		.cfi_offset 8, -16
 295 0104 13040101 		addi	s0,sp,16
 296              		.cfi_def_cfa 8, 0
  67:src/../h/syscall_cpp.hpp ****     return mem_alloc(n);
GAS LISTING /tmp/ccrQlmmC.s 			page 8


 297              		.loc 2 67 5
 298              		.loc 2 67 21 is_stmt 0
 299 0108 97000000 		call	_Z9mem_allocm
 299      E7800000 
 300              	.LVL13:
  68:src/../h/syscall_cpp.hpp **** }
 301              		.loc 2 68 1
 302 0110 83308100 		ld	ra,8(sp)
 303              		.cfi_restore 1
 304 0114 03340100 		ld	s0,0(sp)
 305              		.cfi_restore 8
 306              		.cfi_def_cfa 2, 16
 307 0118 13010101 		addi	sp,sp,16
 308              		.cfi_def_cfa_offset 0
 309 011c 67800000 		jr	ra
 310              		.cfi_endproc
 311              	.LFE59:
 313              		.align	2
 314              		.globl	_ZdlPv
 316              	_ZdlPv:
 317              	.LFB60:
  69:src/../h/syscall_cpp.hpp **** 
  70:src/../h/syscall_cpp.hpp **** void operator delete(void *p)
  71:src/../h/syscall_cpp.hpp **** {
 318              		.loc 2 71 1 is_stmt 1
 319              		.cfi_startproc
 320              	.LVL14:
 321 0120 130101FF 		addi	sp,sp,-16
 322              		.cfi_def_cfa_offset 16
 323 0124 23341100 		sd	ra,8(sp)
 324 0128 23308100 		sd	s0,0(sp)
 325              		.cfi_offset 1, -8
 326              		.cfi_offset 8, -16
 327 012c 13040101 		addi	s0,sp,16
 328              		.cfi_def_cfa 8, 0
  72:src/../h/syscall_cpp.hpp **** mem_free(p);
 329              		.loc 2 72 1
 330              		.loc 2 72 9 is_stmt 0
 331 0130 97000000 		call	_Z8mem_freePv
 331      E7800000 
 332              	.LVL15:
  73:src/../h/syscall_cpp.hpp **** }
 333              		.loc 2 73 1
 334 0138 83308100 		ld	ra,8(sp)
 335              		.cfi_restore 1
 336 013c 03340100 		ld	s0,0(sp)
 337              		.cfi_restore 8
 338              		.cfi_def_cfa 2, 16
 339 0140 13010101 		addi	sp,sp,16
 340              		.cfi_def_cfa_offset 0
 341 0144 67800000 		jr	ra
 342              		.cfi_endproc
 343              	.LFE60:
 345              		.align	2
 346              		.globl	_ZdaPv
 348              	_ZdaPv:
 349              	.LFB61:
GAS LISTING /tmp/ccrQlmmC.s 			page 9


  74:src/../h/syscall_cpp.hpp **** 
  75:src/../h/syscall_cpp.hpp **** void operator delete[](void *p)
  76:src/../h/syscall_cpp.hpp **** {
 350              		.loc 2 76 1 is_stmt 1
 351              		.cfi_startproc
 352              	.LVL16:
 353 0148 130101FF 		addi	sp,sp,-16
 354              		.cfi_def_cfa_offset 16
 355 014c 23341100 		sd	ra,8(sp)
 356 0150 23308100 		sd	s0,0(sp)
 357              		.cfi_offset 1, -8
 358              		.cfi_offset 8, -16
 359 0154 13040101 		addi	s0,sp,16
 360              		.cfi_def_cfa 8, 0
  77:src/../h/syscall_cpp.hpp **** mem_free(p);
 361              		.loc 2 77 1
 362              		.loc 2 77 9 is_stmt 0
 363 0158 97000000 		call	_Z8mem_freePv
 363      E7800000 
 364              	.LVL17:
  78:src/../h/syscall_cpp.hpp **** }
 365              		.loc 2 78 1
 366 0160 83308100 		ld	ra,8(sp)
 367              		.cfi_restore 1
 368 0164 03340100 		ld	s0,0(sp)
 369              		.cfi_restore 8
 370              		.cfi_def_cfa 2, 16
 371 0168 13010101 		addi	sp,sp,16
 372              		.cfi_def_cfa_offset 0
 373 016c 67800000 		jr	ra
 374              		.cfi_endproc
 375              	.LFE61:
 377              		.align	2
 378              		.globl	main
 380              	main:
 381              	.LFB62:
 382              		.file 3 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   2:src/main.cpp  **** 
   3:src/main.cpp  **** int main(){
 383              		.loc 3 3 11 is_stmt 1
 384              		.cfi_startproc
 385 0170 130101FF 		addi	sp,sp,-16
 386              		.cfi_def_cfa_offset 16
 387 0174 23341100 		sd	ra,8(sp)
 388 0178 23308100 		sd	s0,0(sp)
 389              		.cfi_offset 1, -8
 390              		.cfi_offset 8, -16
 391 017c 13040101 		addi	s0,sp,16
 392              		.cfi_def_cfa 8, 0
   4:src/main.cpp  **** 
   5:src/main.cpp  ****     int* a=new int[2];
 393              		.loc 3 5 5
 394              		.loc 3 5 21 is_stmt 0
 395 0180 13058000 		li	a0,8
 396 0184 97000000 		call	_Znam
 396      E7800000 
GAS LISTING /tmp/ccrQlmmC.s 			page 10


 397              	.LVL18:
   6:src/main.cpp  ****     a[0]=1;
 398              		.loc 3 6 5 is_stmt 1
 399              		.loc 3 6 9 is_stmt 0
 400 018c 93071000 		li	a5,1
 401 0190 2320F500 		sw	a5,0(a0)
   7:src/main.cpp  ****     return 0;
 402              		.loc 3 7 5 is_stmt 1
   8:src/main.cpp  **** }...
 403              		.loc 3 8 1 is_stmt 0
 404 0194 13050000 		li	a0,0
 405              	.LVL19:
 406 0198 83308100 		ld	ra,8(sp)
 407              		.cfi_restore 1
 408 019c 03340100 		ld	s0,0(sp)
 409              		.cfi_restore 8
 410              		.cfi_def_cfa 2, 16
 411 01a0 13010101 		addi	sp,sp,16
 412              		.cfi_def_cfa_offset 0
 413 01a4 67800000 		jr	ra
 414              		.cfi_endproc
 415              	.LFE62:
 417              	.Letext0:
 418              		.file 4 "src/../h/../lib/hw.h"
 419              		.file 5 "src/../h/TCB.hpp"
GAS LISTING /tmp/ccrQlmmC.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccrQlmmC.s:9      .text:0000000000000000 _Z9mem_allocm
     /tmp/ccrQlmmC.s:13     .text:0000000000000000 .L0 
     /tmp/ccrQlmmC.s:15     .text:0000000000000000 .L0 
     /tmp/ccrQlmmC.s:16     .text:0000000000000004 .L0 
     /tmp/ccrQlmmC.s:18     .text:0000000000000008 .L0 
     /tmp/ccrQlmmC.s:20     .text:000000000000000c .L0 
     /tmp/ccrQlmmC.s:22     .text:000000000000000c .L0 
src/../h/syscall_c.h:5      .text:000000000000000c .L0 
     /tmp/ccrQlmmC.s:28     .text:0000000000000010 .L0 
src/../h/syscall_c.h:6      .text:0000000000000010 .L0 
     /tmp/ccrQlmmC.s:33     .text:0000000000000014 .L0 
src/../h/syscall_c.h:7      .text:0000000000000014 .L0 
     /tmp/ccrQlmmC.s:38     .text:0000000000000018 .L0 
     /tmp/ccrQlmmC.s:39     .text:0000000000000018 .L0 
src/../h/syscall_c.h:9      .text:0000000000000018 .L0 
     /tmp/ccrQlmmC.s:45     .text:000000000000001c .L0 
     /tmp/ccrQlmmC.s:47     .text:000000000000001c .L0 
     /tmp/ccrQlmmC.s:48     .text:0000000000000020 .L0 
     /tmp/ccrQlmmC.s:49     .text:0000000000000020 .L0 
     /tmp/ccrQlmmC.s:51     .text:0000000000000024 .L0 
     /tmp/ccrQlmmC.s:53     .text:0000000000000028 .L0 
     /tmp/ccrQlmmC.s:59     .text:0000000000000028 _Z8mem_freePv
     /tmp/ccrQlmmC.s:62     .text:0000000000000028 .L0 
     /tmp/ccrQlmmC.s:64     .text:0000000000000028 .L0 
     /tmp/ccrQlmmC.s:65     .text:000000000000002c .L0 
     /tmp/ccrQlmmC.s:67     .text:0000000000000030 .L0 
     /tmp/ccrQlmmC.s:69     .text:0000000000000034 .L0 
     /tmp/ccrQlmmC.s:71     .text:0000000000000034 .L0 
src/../h/syscall_c.h:14     .text:0000000000000034 .L0 
     /tmp/ccrQlmmC.s:77     .text:0000000000000038 .L0 
src/../h/syscall_c.h:15     .text:0000000000000038 .L0 
     /tmp/ccrQlmmC.s:82     .text:000000000000003c .L0 
src/../h/syscall_c.h:16     .text:000000000000003c .L0 
     /tmp/ccrQlmmC.s:87     .text:0000000000000040 .L0 
     /tmp/ccrQlmmC.s:88     .text:0000000000000040 .L0 
src/../h/syscall_c.h:19     .text:0000000000000040 .L0 
     /tmp/ccrQlmmC.s:94     .text:0000000000000044 .L0 
     /tmp/ccrQlmmC.s:96     .text:0000000000000044 .L0 
     /tmp/ccrQlmmC.s:99     .text:000000000000004c .L0 
     /tmp/ccrQlmmC.s:100    .text:000000000000004c .L0 
     /tmp/ccrQlmmC.s:102    .text:0000000000000050 .L0 
     /tmp/ccrQlmmC.s:104    .text:0000000000000054 .L0 
     /tmp/ccrQlmmC.s:110    .text:0000000000000054 _Z13thread_createPP3TCBPFvPvES2_
     /tmp/ccrQlmmC.s:113    .text:0000000000000054 .L0 
     /tmp/ccrQlmmC.s:115    .text:0000000000000054 .L0 
     /tmp/ccrQlmmC.s:116    .text:0000000000000058 .L0 
     /tmp/ccrQlmmC.s:118    .text:000000000000005c .L0 
     /tmp/ccrQlmmC.s:120    .text:0000000000000060 .L0 
     /tmp/ccrQlmmC.s:122    .text:0000000000000060 .L0 
src/../h/syscall_c.h:24     .text:0000000000000060 .L0 
     /tmp/ccrQlmmC.s:128    .text:0000000000000064 .L0 
src/../h/syscall_c.h:25     .text:0000000000000064 .L0 
     /tmp/ccrQlmmC.s:133    .text:0000000000000068 .L0 
src/../h/syscall_c.h:26     .text:0000000000000068 .L0 
     /tmp/ccrQlmmC.s:138    .text:000000000000006c .L0 
GAS LISTING /tmp/ccrQlmmC.s 			page 12


src/../h/syscall_c.h:27     .text:000000000000006c .L0 
     /tmp/ccrQlmmC.s:143    .text:0000000000000070 .L0 
src/../h/syscall_c.h:28     .text:0000000000000070 .L0 
     /tmp/ccrQlmmC.s:148    .text:0000000000000074 .L0 
     /tmp/ccrQlmmC.s:149    .text:0000000000000074 .L0 
src/../h/syscall_c.h:30     .text:0000000000000074 .L0 
     /tmp/ccrQlmmC.s:155    .text:0000000000000078 .L0 
     /tmp/ccrQlmmC.s:157    .text:0000000000000078 .L0 
     /tmp/ccrQlmmC.s:160    .text:0000000000000080 .L0 
     /tmp/ccrQlmmC.s:161    .text:0000000000000080 .L0 
     /tmp/ccrQlmmC.s:163    .text:0000000000000084 .L0 
     /tmp/ccrQlmmC.s:165    .text:0000000000000088 .L0 
     /tmp/ccrQlmmC.s:171    .text:0000000000000088 _Z11thread_exitv
     /tmp/ccrQlmmC.s:174    .text:0000000000000088 .L0 
     /tmp/ccrQlmmC.s:175    .text:0000000000000088 .L0 
     /tmp/ccrQlmmC.s:176    .text:000000000000008c .L0 
     /tmp/ccrQlmmC.s:178    .text:0000000000000090 .L0 
     /tmp/ccrQlmmC.s:180    .text:0000000000000094 .L0 
     /tmp/ccrQlmmC.s:182    .text:0000000000000094 .L0 
src/../h/syscall_c.h:36     .text:0000000000000094 .L0 
     /tmp/ccrQlmmC.s:188    .text:0000000000000098 .L0 
src/../h/syscall_c.h:37     .text:0000000000000098 .L0 
     /tmp/ccrQlmmC.s:193    .text:000000000000009c .L0 
     /tmp/ccrQlmmC.s:194    .text:000000000000009c .L0 
src/../h/syscall_c.h:40     .text:000000000000009c .L0 
     /tmp/ccrQlmmC.s:200    .text:00000000000000a0 .L0 
     /tmp/ccrQlmmC.s:202    .text:00000000000000a0 .L0 
     /tmp/ccrQlmmC.s:205    .text:00000000000000a8 .L0 
     /tmp/ccrQlmmC.s:206    .text:00000000000000a8 .L0 
     /tmp/ccrQlmmC.s:208    .text:00000000000000ac .L0 
     /tmp/ccrQlmmC.s:210    .text:00000000000000b0 .L0 
     /tmp/ccrQlmmC.s:216    .text:00000000000000b0 _Z15thread_dispatchv
     /tmp/ccrQlmmC.s:219    .text:00000000000000b0 .L0 
     /tmp/ccrQlmmC.s:220    .text:00000000000000b0 .L0 
     /tmp/ccrQlmmC.s:221    .text:00000000000000b4 .L0 
     /tmp/ccrQlmmC.s:223    .text:00000000000000b8 .L0 
     /tmp/ccrQlmmC.s:225    .text:00000000000000bc .L0 
     /tmp/ccrQlmmC.s:227    .text:00000000000000bc .L0 
src/../h/syscall_c.h:45     .text:00000000000000bc .L0 
     /tmp/ccrQlmmC.s:233    .text:00000000000000c0 .L0 
src/../h/syscall_c.h:46     .text:00000000000000c0 .L0 
     /tmp/ccrQlmmC.s:239    .text:00000000000000c4 .L0 
     /tmp/ccrQlmmC.s:240    .text:00000000000000c8 .L0 
     /tmp/ccrQlmmC.s:241    .text:00000000000000c8 .L0 
     /tmp/ccrQlmmC.s:243    .text:00000000000000cc .L0 
     /tmp/ccrQlmmC.s:245    .text:00000000000000d0 .L0 
     /tmp/ccrQlmmC.s:251    .text:00000000000000d0 _Znwm
     /tmp/ccrQlmmC.s:255    .text:00000000000000d0 .L0 
     /tmp/ccrQlmmC.s:257    .text:00000000000000d0 .L0 
     /tmp/ccrQlmmC.s:258    .text:00000000000000d4 .L0 
     /tmp/ccrQlmmC.s:261    .text:00000000000000dc .L0 
     /tmp/ccrQlmmC.s:262    .text:00000000000000dc .L0 
     /tmp/ccrQlmmC.s:264    .text:00000000000000e0 .L0 
     /tmp/ccrQlmmC.s:266    .text:00000000000000e0 .L0 
     /tmp/ccrQlmmC.s:267    .text:00000000000000e0 .L0 
     /tmp/ccrQlmmC.s:270    .text:00000000000000e8 .L0 
     /tmp/ccrQlmmC.s:271    .text:00000000000000ec .L0 
GAS LISTING /tmp/ccrQlmmC.s 			page 13


     /tmp/ccrQlmmC.s:273    .text:00000000000000f0 .L0 
     /tmp/ccrQlmmC.s:274    .text:00000000000000f0 .L0 
     /tmp/ccrQlmmC.s:276    .text:00000000000000f4 .L0 
     /tmp/ccrQlmmC.s:278    .text:00000000000000f8 .L0 
     /tmp/ccrQlmmC.s:284    .text:00000000000000f8 _Znam
     /tmp/ccrQlmmC.s:287    .text:00000000000000f8 .L0 
     /tmp/ccrQlmmC.s:289    .text:00000000000000f8 .L0 
     /tmp/ccrQlmmC.s:290    .text:00000000000000fc .L0 
     /tmp/ccrQlmmC.s:293    .text:0000000000000104 .L0 
     /tmp/ccrQlmmC.s:294    .text:0000000000000104 .L0 
     /tmp/ccrQlmmC.s:296    .text:0000000000000108 .L0 
     /tmp/ccrQlmmC.s:298    .text:0000000000000108 .L0 
     /tmp/ccrQlmmC.s:299    .text:0000000000000108 .L0 
     /tmp/ccrQlmmC.s:302    .text:0000000000000110 .L0 
     /tmp/ccrQlmmC.s:303    .text:0000000000000114 .L0 
     /tmp/ccrQlmmC.s:305    .text:0000000000000118 .L0 
     /tmp/ccrQlmmC.s:306    .text:0000000000000118 .L0 
     /tmp/ccrQlmmC.s:308    .text:000000000000011c .L0 
     /tmp/ccrQlmmC.s:310    .text:0000000000000120 .L0 
     /tmp/ccrQlmmC.s:316    .text:0000000000000120 _ZdlPv
     /tmp/ccrQlmmC.s:319    .text:0000000000000120 .L0 
     /tmp/ccrQlmmC.s:321    .text:0000000000000120 .L0 
     /tmp/ccrQlmmC.s:322    .text:0000000000000124 .L0 
     /tmp/ccrQlmmC.s:325    .text:000000000000012c .L0 
     /tmp/ccrQlmmC.s:326    .text:000000000000012c .L0 
     /tmp/ccrQlmmC.s:328    .text:0000000000000130 .L0 
     /tmp/ccrQlmmC.s:330    .text:0000000000000130 .L0 
     /tmp/ccrQlmmC.s:331    .text:0000000000000130 .L0 
     /tmp/ccrQlmmC.s:334    .text:0000000000000138 .L0 
     /tmp/ccrQlmmC.s:335    .text:000000000000013c .L0 
     /tmp/ccrQlmmC.s:337    .text:0000000000000140 .L0 
     /tmp/ccrQlmmC.s:338    .text:0000000000000140 .L0 
     /tmp/ccrQlmmC.s:340    .text:0000000000000144 .L0 
     /tmp/ccrQlmmC.s:342    .text:0000000000000148 .L0 
     /tmp/ccrQlmmC.s:348    .text:0000000000000148 _ZdaPv
     /tmp/ccrQlmmC.s:351    .text:0000000000000148 .L0 
     /tmp/ccrQlmmC.s:353    .text:0000000000000148 .L0 
     /tmp/ccrQlmmC.s:354    .text:000000000000014c .L0 
     /tmp/ccrQlmmC.s:357    .text:0000000000000154 .L0 
     /tmp/ccrQlmmC.s:358    .text:0000000000000154 .L0 
     /tmp/ccrQlmmC.s:360    .text:0000000000000158 .L0 
     /tmp/ccrQlmmC.s:362    .text:0000000000000158 .L0 
     /tmp/ccrQlmmC.s:363    .text:0000000000000158 .L0 
     /tmp/ccrQlmmC.s:366    .text:0000000000000160 .L0 
     /tmp/ccrQlmmC.s:367    .text:0000000000000164 .L0 
     /tmp/ccrQlmmC.s:369    .text:0000000000000168 .L0 
     /tmp/ccrQlmmC.s:370    .text:0000000000000168 .L0 
     /tmp/ccrQlmmC.s:372    .text:000000000000016c .L0 
     /tmp/ccrQlmmC.s:374    .text:0000000000000170 .L0 
     /tmp/ccrQlmmC.s:380    .text:0000000000000170 main
     /tmp/ccrQlmmC.s:384    .text:0000000000000170 .L0 
     /tmp/ccrQlmmC.s:385    .text:0000000000000170 .L0 
     /tmp/ccrQlmmC.s:386    .text:0000000000000174 .L0 
     /tmp/ccrQlmmC.s:389    .text:000000000000017c .L0 
     /tmp/ccrQlmmC.s:390    .text:000000000000017c .L0 
     /tmp/ccrQlmmC.s:392    .text:0000000000000180 .L0 
     /tmp/ccrQlmmC.s:394    .text:0000000000000180 .L0 
GAS LISTING /tmp/ccrQlmmC.s 			page 14


     /tmp/ccrQlmmC.s:395    .text:0000000000000180 .L0 
     /tmp/ccrQlmmC.s:399    .text:000000000000018c .L0 
     /tmp/ccrQlmmC.s:400    .text:000000000000018c .L0 
     /tmp/ccrQlmmC.s:403    .text:0000000000000194 .L0 
     /tmp/ccrQlmmC.s:404    .text:0000000000000194 .L0 
     /tmp/ccrQlmmC.s:407    .text:000000000000019c .L0 
     /tmp/ccrQlmmC.s:409    .text:00000000000001a0 .L0 
     /tmp/ccrQlmmC.s:410    .text:00000000000001a0 .L0 
     /tmp/ccrQlmmC.s:412    .text:00000000000001a4 .L0 
     /tmp/ccrQlmmC.s:414    .text:00000000000001a8 .L0 
     /tmp/ccrQlmmC.s:420    .text:00000000000001a8 .L0 
     /tmp/ccrQlmmC.s:1119   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccrQlmmC.s:2112   .debug_str:00000000000003cd .LASF67
     /tmp/ccrQlmmC.s:2038   .debug_str:0000000000000201 .LASF68
     /tmp/ccrQlmmC.s:2004   .debug_str:00000000000000dd .LASF69
     /tmp/ccrQlmmC.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccrQlmmC.s:417    .text:00000000000001a8 .Letext0
     /tmp/ccrQlmmC.s:1968   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccrQlmmC.s:2056   .debug_str:0000000000000273 .LASF0
     /tmp/ccrQlmmC.s:2064   .debug_str:0000000000000299 .LASF1
     /tmp/ccrQlmmC.s:2048   .debug_str:0000000000000236 .LASF2
     /tmp/ccrQlmmC.s:2026   .debug_str:00000000000001c5 .LASF4
     /tmp/ccrQlmmC.s:2098   .debug_str:000000000000036a .LASF3
     /tmp/ccrQlmmC.s:1980   .debug_str:0000000000000046 .LASF5
     /tmp/ccrQlmmC.s:2068   .debug_str:00000000000002bd .LASF6
     /tmp/ccrQlmmC.s:2054   .debug_str:0000000000000260 .LASF7
     /tmp/ccrQlmmC.s:2118   .debug_str:00000000000004a8 .LASF8
     /tmp/ccrQlmmC.s:2016   .debug_str:0000000000000153 .LASF9
     /tmp/ccrQlmmC.s:2078   .debug_str:00000000000002eb .LASF10
     /tmp/ccrQlmmC.s:2116   .debug_str:0000000000000499 .LASF11
     /tmp/ccrQlmmC.s:1982   .debug_str:000000000000004d .LASF12
     /tmp/ccrQlmmC.s:1972   .debug_str:0000000000000009 .LASF13
     /tmp/ccrQlmmC.s:1986   .debug_str:000000000000006a .LASF14
     /tmp/ccrQlmmC.s:2090   .debug_str:0000000000000326 .LASF15
     /tmp/ccrQlmmC.s:1992   .debug_str:0000000000000094 .LASF16
     /tmp/ccrQlmmC.s:2002   .debug_str:00000000000000d8 .LASF17
     /tmp/ccrQlmmC.s:2072   .debug_str:00000000000002db .LASF18
     /tmp/ccrQlmmC.s:1974   .debug_str:0000000000000019 .LASF70
     /tmp/ccrQlmmC.s:2122   .debug_str:00000000000004c6 .LASF19
     /tmp/ccrQlmmC.s:2110   .debug_str:00000000000003c1 .LASF21
     /tmp/ccrQlmmC.s:2012   .debug_str:000000000000012c .LASF20
     /tmp/ccrQlmmC.s:2018   .debug_str:0000000000000161 .LASF22
     /tmp/ccrQlmmC.s:2104   .debug_str:0000000000000397 .LASF23
     /tmp/ccrQlmmC.s:2088   .debug_str:0000000000000319 .LASF25
     /tmp/ccrQlmmC.s:2106   .debug_str:00000000000003a7 .LASF24
     /tmp/ccrQlmmC.s:1984   .debug_str:000000000000005d .LASF26
     /tmp/ccrQlmmC.s:1996   .debug_str:00000000000000b8 .LASF27
     /tmp/ccrQlmmC.s:2082   .debug_str:0000000000000303 .LASF29
     /tmp/ccrQlmmC.s:2070   .debug_str:00000000000002d0 .LASF31
     /tmp/ccrQlmmC.s:2014   .debug_str:000000000000013c .LASF33
     /tmp/ccrQlmmC.s:2050   .debug_str:0000000000000244 .LASF28
     /tmp/ccrQlmmC.s:2022   .debug_str:0000000000000186 .LASF30
     /tmp/ccrQlmmC.s:2042   .debug_str:0000000000000214 .LASF32
     /tmp/ccrQlmmC.s:1978   .debug_str:000000000000002d .LASF34
     /tmp/ccrQlmmC.s:2084   .debug_str:000000000000030f .LASF71
     /tmp/ccrQlmmC.s:2114   .debug_str:0000000000000491 .LASF35
     /tmp/ccrQlmmC.s:2036   .debug_str:00000000000001ef .LASF36
GAS LISTING /tmp/ccrQlmmC.s 			page 15


     /tmp/ccrQlmmC.s:2034   .debug_str:00000000000001e2 .LASF37
     /tmp/ccrQlmmC.s:2124   .debug_str:00000000000004d3 .LASF38
     /tmp/ccrQlmmC.s:2092   .debug_str:000000000000033c .LASF72
     /tmp/ccrQlmmC.s:2052   .debug_str:0000000000000250 .LASF73
     /tmp/ccrQlmmC.s:1998   .debug_str:00000000000000bd .LASF74
     /tmp/ccrQlmmC.s:2030   .debug_str:00000000000001d5 .LASF39
     /tmp/ccrQlmmC.s:2060   .debug_str:0000000000000289 .LASF40
     /tmp/ccrQlmmC.s:2032   .debug_str:00000000000001da .LASF41
     /tmp/ccrQlmmC.s:2062   .debug_str:000000000000028f .LASF42
     /tmp/ccrQlmmC.s:2028   .debug_str:00000000000001cc .LASF43
     /tmp/ccrQlmmC.s:2044   .debug_str:0000000000000221 .LASF46
     /tmp/ccrQlmmC.s:2020   .debug_str:000000000000016d .LASF48
     /tmp/ccrQlmmC.s:2120   .debug_str:00000000000004b8 .LASF44
     /tmp/ccrQlmmC.s:2024   .debug_str:000000000000019d .LASF45
     /tmp/ccrQlmmC.s:2058   .debug_str:0000000000000280 .LASF47
     /tmp/ccrQlmmC.s:2000   .debug_str:00000000000000c5 .LASF49
     /tmp/ccrQlmmC.s:2100   .debug_str:000000000000037c .LASF75
     /tmp/ccrQlmmC.s:1970   .debug_str:0000000000000000 .LASF50
     /tmp/ccrQlmmC.s:2074   .debug_str:00000000000002e0 .LASF51
     /tmp/ccrQlmmC.s:381    .text:0000000000000170 .LFB62
     /tmp/ccrQlmmC.s:415    .text:00000000000001a8 .LFE62
     /tmp/ccrQlmmC.s:1829   .debug_loc:0000000000000000 .LLST10
     /tmp/ccrQlmmC.s:397    .text:000000000000018c .LVL18
     /tmp/ccrQlmmC.s:2096   .debug_str:0000000000000363 .LASF52
     /tmp/ccrQlmmC.s:349    .text:0000000000000148 .LFB61
     /tmp/ccrQlmmC.s:375    .text:0000000000000170 .LFE61
     /tmp/ccrQlmmC.s:1836   .debug_loc:0000000000000023 .LLST9
     /tmp/ccrQlmmC.s:364    .text:0000000000000160 .LVL17
     /tmp/ccrQlmmC.s:2046   .debug_str:000000000000022f .LASF53
     /tmp/ccrQlmmC.s:317    .text:0000000000000120 .LFB60
     /tmp/ccrQlmmC.s:343    .text:0000000000000148 .LFE60
     /tmp/ccrQlmmC.s:1850   .debug_loc:000000000000005c .LLST8
     /tmp/ccrQlmmC.s:332    .text:0000000000000138 .LVL15
     /tmp/ccrQlmmC.s:2076   .debug_str:00000000000002e5 .LASF54
     /tmp/ccrQlmmC.s:285    .text:00000000000000f8 .LFB59
     /tmp/ccrQlmmC.s:311    .text:0000000000000120 .LFE59
     /tmp/ccrQlmmC.s:1864   .debug_loc:0000000000000095 .LLST7
     /tmp/ccrQlmmC.s:300    .text:0000000000000110 .LVL13
     /tmp/ccrQlmmC.s:2040   .debug_str:000000000000020e .LASF55
     /tmp/ccrQlmmC.s:252    .text:00000000000000d0 .LFB58
     /tmp/ccrQlmmC.s:279    .text:00000000000000f8 .LFE58
     /tmp/ccrQlmmC.s:1878   .debug_loc:00000000000000ce .LLST6
     /tmp/ccrQlmmC.s:268    .text:00000000000000e8 .LVL11
     /tmp/ccrQlmmC.s:1988   .debug_str:0000000000000076 .LASF76
     /tmp/ccrQlmmC.s:2006   .debug_str:00000000000000fb .LASF77
     /tmp/ccrQlmmC.s:217    .text:00000000000000b0 .LFB40
     /tmp/ccrQlmmC.s:246    .text:00000000000000d0 .LFE40
     /tmp/ccrQlmmC.s:1976   .debug_str:0000000000000021 .LASF56
     /tmp/ccrQlmmC.s:2066   .debug_str:00000000000002ac .LASF57
     /tmp/ccrQlmmC.s:172    .text:0000000000000088 .LFB39
     /tmp/ccrQlmmC.s:211    .text:00000000000000b0 .LFE39
     /tmp/ccrQlmmC.s:1892   .debug_loc:0000000000000107 .LLST5
     /tmp/ccrQlmmC.s:1994   .debug_str:00000000000000aa .LASF58
     /tmp/ccrQlmmC.s:2094   .debug_str:0000000000000342 .LASF59
     /tmp/ccrQlmmC.s:111    .text:0000000000000054 .LFB38
     /tmp/ccrQlmmC.s:166    .text:0000000000000088 .LFE38
     /tmp/ccrQlmmC.s:2108   .debug_str:00000000000003ba .LASF60
GAS LISTING /tmp/ccrQlmmC.s 			page 16


     /tmp/ccrQlmmC.s:1899   .debug_loc:000000000000012a .LLST3
     /tmp/ccrQlmmC.s:2010   .debug_str:000000000000011e .LASF61
     /tmp/ccrQlmmC.s:1913   .debug_loc:0000000000000163 .LLST4
     /tmp/ccrQlmmC.s:2080   .debug_str:00000000000002fa .LASF62
     /tmp/ccrQlmmC.s:2008   .debug_str:0000000000000110 .LASF63
     /tmp/ccrQlmmC.s:60     .text:0000000000000028 .LFB37
     /tmp/ccrQlmmC.s:105    .text:0000000000000054 .LFE37
     /tmp/ccrQlmmC.s:1920   .debug_loc:0000000000000186 .LLST1
     /tmp/ccrQlmmC.s:1934   .debug_loc:00000000000001bf .LLST2
     /tmp/ccrQlmmC.s:2102   .debug_str:000000000000038d .LASF64
     /tmp/ccrQlmmC.s:1990   .debug_str:0000000000000086 .LASF65
     /tmp/ccrQlmmC.s:10     .text:0000000000000000 .LFB36
     /tmp/ccrQlmmC.s:54     .text:0000000000000028 .LFE36
     /tmp/ccrQlmmC.s:2086   .debug_str:0000000000000314 .LASF66
     /tmp/ccrQlmmC.s:1941   .debug_loc:00000000000001e2 .LLST0
     /tmp/ccrQlmmC.s:405    .text:0000000000000198 .LVL19
     /tmp/ccrQlmmC.s:352    .text:0000000000000148 .LVL16
     /tmp/ccrQlmmC.s:320    .text:0000000000000120 .LVL14
     /tmp/ccrQlmmC.s:288    .text:00000000000000f8 .LVL12
     /tmp/ccrQlmmC.s:256    .text:00000000000000d0 .LVL10
     /tmp/ccrQlmmC.s:198    .text:00000000000000a0 .LVL8
     /tmp/ccrQlmmC.s:203    .text:00000000000000a4 .LVL9
     /tmp/ccrQlmmC.s:114    .text:0000000000000054 .LVL5
     /tmp/ccrQlmmC.s:153    .text:0000000000000078 .LVL6
     /tmp/ccrQlmmC.s:158    .text:000000000000007c .LVL7
     /tmp/ccrQlmmC.s:63     .text:0000000000000028 .LVL2
     /tmp/ccrQlmmC.s:92     .text:0000000000000044 .LVL3
     /tmp/ccrQlmmC.s:97     .text:0000000000000048 .LVL4
     /tmp/ccrQlmmC.s:14     .text:0000000000000000 .LVL0
     /tmp/ccrQlmmC.s:43     .text:000000000000001c .LVL1
     /tmp/ccrQlmmC.s:421    .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
